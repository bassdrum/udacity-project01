{"version":3,"sources":["_module.validation.js","validation.js"],"names":["$","Module","element","options","this","_name","moduleName","_defaults","fn","defaults","extend","$element","$parent","$helpBlock","everValue","init","prototype","buildCache","bindEvents","closest","siblings","module","on","isValid","cleanUp","showError","val","attr","checkValidity","removeClass","addClass","html","message","getErrorMessage","states","validity","key","formatMessage","messages","replace","option","each","$this","data","valueMissing","tooShort","jQuery","window","document","undefined","validate","typeMismatch"],"mappings":"CAAA,SAAAA,GA6CA,YAIA,SAAAC,GAAAC,EAAAC,GACAC,KAAAF,QAAAA,EACAE,KAAAC,MAAAC,EACAF,KAAAG,UAAAP,EAAAQ,GAAAF,GAAAG,SACAL,KAAAD,QAAAH,EAAAU,QAAA,KAAAN,KAAAG,UAAAJ,GACAC,KAAAO,SAAA,KACAP,KAAAQ,QAAA,KACAR,KAAAS,WAAA,KACAT,KAAAU,UAAA,KAEAV,KAAAW,OAZA,GAAAT,GAAA,UAeAL,GAAAe,UAAAD,KAAA,WACAX,KAAAa,aACAb,KAAAc,cAGAjB,EAAAe,UAAAC,WAAA,WACAb,KAAAO,SAAAX,EAAAI,KAAAF,SACAE,KAAAQ,QAAAR,KAAAO,SAAAQ,QAAA,eACAf,KAAAS,WAAAT,KAAAO,SAAAS,SAAA,gBAGAnB,EAAAe,UAAAE,WAAA,WACA,GAAAG,GAAAjB,IAEAiB,GAAAV,SAAAW,GAAA,SAAAD,EAAAhB,MAAA,WACAgB,EAAAE,UACAF,EAAAG,UACAH,EAAAP,WACAO,EAAAI,cAIAJ,EAAAV,SAAAW,GAAA,SAAAD,EAAAhB,MAAA,WACAgB,EAAAP,YACAO,EAAAP,UAAAO,EAAAV,SAAAe,SAIAL,EAAAV,SAAAW,GAAA,QAAAD,EAAAhB,MAAA,YACAgB,EAAAV,SAAAe,OAAAL,EAAAP,aAIAO,EAAAE,UACAF,EAAAG,UAEAH,EAAAI,gBAKAxB,EAAAe,UAAAO,QAAA,WACAnB,KAAAO,SAAAgB,KAAA,OAEA,OAAAvB,MAAAF,QAAA0B,iBASA3B,EAAAe,UAAAQ,QAAA,WACApB,KAAAQ,QAAAiB,YAAA,aACAzB,KAAAS,WAAAiB,SAAA,UAAAC,QAGA9B,EAAAe,UAAAS,UAAA,WACA,GAAAO,GAAA5B,KAAA6B,iBAEA7B,MAAAQ,QAAAkB,SAAA,aACA1B,KAAAS,WAAAgB,YAAA,UAAAE,KAAAC,IAGA/B,EAAAe,UAAAiB,gBAAA,WACA,GAAAC,GAAA9B,KAAAF,QAAAiC,QAEA,KAAA,GAAAC,KAAAF,GACA,GAAAA,EAAAE,GACA,MAAAhC,MAAAiC,cAAAD,EAIA,QAAA,GAGAnC,EAAAe,UAAAqB,cAAA,SAAAD,GACA,GAAAJ,GAAA5B,KAAAD,QAAAmC,SAAAF,EAMA,QAJA,YAAAA,GAAA,WAAAA,KACAJ,EAAAA,EAAAO,QAAA,MAAAnC,KAAAO,SAAAgB,KAAA,eAGAK,GAGAhC,EAAAQ,GAAAF,GAAA,SAAAkC,GACA,MAAApC,MAAAqC,KAAA,WACA,GAAAC,GAAA1C,EAAAI,MACAuC,EAAAD,EAAAC,KAAA,UAAArC,GACAH,EAAAH,EAAAU,UAAAV,EAAAQ,GAAAF,GAAAG,SAAAiC,EAAAC,OAAA,gBAAAH,IAAAA,EAEAG,IAAAD,EAAAC,KAAA,UAAArC,EAAAqC,EAAA,GAAA1C,GAAAG,KAAAD,IACA,gBAAAqC,IAAAG,EAAAH,QAIAxC,EAAAQ,GAAAF,GAAAG,UACA6B,UACAM,aAAA,wBACAC,SAAA,6BAIAC,SCvKA,SAAA9C,EAAA+C,EAAAC,EAAAC,GAEAjD,EAAA,YAAAkD,UACAZ,UACAM,aAAA,iCACAC,SAAA,0DAIA7C,EAAA,aAAAkD,UACAZ,UACAM,aAAA,8BACAO,aAAA,wCAIAnD,EAAA,WAAAkD,YAEAJ,OAAAC,OAAAC","file":"bundle.js","sourcesContent":["+function ($) {\n  // как валидировать?\n  // 1. определить способ валидации (зависит от типа поля)\n  // 2. добавить обработчик keyup на поле\n  // 2.1 проверяю валидно ли поле? (вот тут логика валидации будет зависеть от типа поля)\n  // 2.2 если нет, ничего не делаю\n  // 2.3 если да, setCustomValidity() + удаляю has-error (не важно, был он или нет)\n  // 3. добавить обработчик blur \n  // 3.1 поле валидно? (вот тут логика валидации будет зависеть от типа поля)\n  // 3.2 да — ничего не делаю\n  // 3.3 нет - setCustomValidity(false), + добавляю has-error\n  \n  // вторая итерация \n  // научиться обрабатывать больше одной ошибки\n  // 1. получаю объект validity\n  // 2. прохожу по свойствам\n  // 3. нахожу true и сопоставляю с объектом ошибок и текстов уникальным для данного поля\n  // 4. выдаю именно эту ошибку\n  \n  // создаю объект, в котором есть стандартные тексты ошибок для стандартных кейсов\n  // возможно с зависимостью от типа поля\n  // далее при ошибке валидации, я сначала смотрю нет ли объекта с сообщениями об ошибках в параметрах инициализации\n  // если нет, дергаю подходящее сообщение из предопределенного объекта\n  \n  // третья итерация\n  // инициализировать плагин на поле\n  // откуда брать сообщения об ошибке?\n  // оставить в html?\n  \n  \n  // четвертая итерация\n  // усложнить логику валидации\n  // не валидировать поле которое было и осталось пустым\n  // валидировать поле на keyup, если поле уже когда то было отвалидировано в инвалид\n  \n  // пятая итерация\n  // добавить валидацию для пароля\n  \n  // шестая итерация\n  // вынести валидацию на уровень формы\n  \n  // последняя итерация \n  // покрыть код комментариями\n  \n  \n  'use strict';\n  \n  var moduleName = 'validate';\n\n  function Module (element, options) {\n    this.element      = element;\n    this._name        = moduleName;\n    this._defaults    = $.fn[moduleName].defaults;\n    this.options      = $.extend(true, {}, this._defaults, options );\n    this.$element     = null;\n    this.$parent      = null;\n    this.$helpBlock   = null;\n    this.everValue    = null;\n    \n    this.init();\n  }\n  \n  Module.prototype.init = function () {\n    this.buildCache();\n    this.bindEvents();\n  };\n  \n  Module.prototype.buildCache = function() {\n    this.$element   = $(this.element);\n    this.$parent    = this.$element.closest('.form-group');\n    this.$helpBlock = this.$element.siblings('.help-block');\n  };\n  \n  Module.prototype.bindEvents = function() {\n    var module = this;\n    \n    module.$element.on('keyup'+'.'+module._name, function() {\n      if ( module.isValid() ) {\n        module.cleanUp();\n      } else if( module.everValue ) {\n        module.showError();\n      }\n    });\n    \n    module.$element.on('focus'+'.'+module._name, function() {\n      if ( !module.everValue ) {\n        module.everValue = module.$element.val();\n      }\n    });\n    \n    module.$element.on('blur'+'.'+module._name, function() {\n      if ( !module.$element.val() && !module.everValue ) {\n        return;\n      }\n      \n      if ( module.isValid() ) {\n        module.cleanUp();\n      } else {\n        module.showError();\n      }\n    });\n  };\n  \n  Module.prototype.isValid = function() {\n    var type = this.$element.attr('type');\n    \n    return this.element.checkValidity();\n    /*\n    if (type == 'password') {\n      // ...\n    } else {\n      return this.element.checkValidity();\n    }*/\n  };\n  \n  Module.prototype.cleanUp = function() {\n    this.$parent.removeClass('has-error');\n    this.$helpBlock.addClass('hidden').html();\n  };\n  \n  Module.prototype.showError = function() {\n    var message = this.getErrorMessage();\n    \n    this.$parent.addClass('has-error');\n    this.$helpBlock.removeClass('hidden').html(message);\n  };\n  \n  Module.prototype.getErrorMessage = function() {\n    var states = this.element.validity;\n    \n    for (var key in states) {\n      if ( states[key] ) {\n        return this.formatMessage(key);\n      }\n    }\n    \n    return false;\n  };\n  \n  Module.prototype.formatMessage = function(key) {\n    var message = this.options.messages[key];\n    \n    if (key == 'tooShort' || key == 'tooLong') {\n      message = message.replace('NNN', this.$element.attr('minlength'));\n    }\n    \n    return message;\n  };\n  \n  $.fn[moduleName] = function (option) {\n    return this.each(function () {\n      var $this   = $(this);\n      var data    = $this.data( 'module_' + moduleName );\n      var options = $.extend({}, $.fn[moduleName].defaults, $this.data(), typeof option == 'object' && option);\n      \n      if (!data) $this.data( 'module_' + moduleName, ( data = new Module(this, options) ) );\n      if (typeof option == 'string') data[option]();\n    });\n  };\n\n  $.fn[moduleName].defaults = {\n    messages: {\n      valueMissing: 'The field is required',\n      tooShort: 'At least NNN characters'\n    }\n  };\n\n}(jQuery);","+function ($, window, document, undefined) {\n\n  $('#regName').validate({\n    messages: {\n      valueMissing: 'We really need your name, mate',\n      tooShort: 'The name is too short, bro (at least NNN characters)'\n    }\n  });\n  \n  $('#regEmail').validate({\n    messages: {\n      valueMissing: 'What if it is an emergency?',\n      typeMismatch: 'It doesn\\'t look like a valid email'\n    }\n  });\n  \n  $('#regPwd').validate();\n  \n}( jQuery, window, document );"],"sourceRoot":"/source/"}
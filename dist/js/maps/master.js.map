{"version":3,"sources":["master.js","_modules.validation.js","_core.js","_events.js","_forms.registration.js","_forms.createEvent.js"],"names":["UI","$","Module","element","options","this","_name","moduleName","_defaults","fn","defaults","extend","elementType","type","$element","$parent","$helpBlock","$messagesList","everValue","init","prototype","buildDom","buildCache","bindEvents","$ul","key","messages","password","append","closest","siblings","find","module","on","val","isValid","cleanUp","showError","processPasswordMessages","checkValidity","isValid_password","minLength","upper","lower","number","special","result","conditions","test","setCustomValidity","message","getErrorMessage","addClass","removeClass","html","states","validity","formatMessage","replace","attr","counter","forceValidation","option","each","$this","data","valueMissing","tooShort","minlength","jQuery","core","model","applicationState","viewBuilder","showSpinner","$body","$dim","$spinner","hideSpinner","hideAll","$registration","$createEvent","$list","events","process","setTimeout","$btns","$header","$events","$empty","length","forEach","event","name","title","sameDate","noEndDate","startYear","Date","getFullYear","endYear","startDate","endDate","startMonth","startTime","endMonth","endTime","when","host","location","where","guests","guest","registration","$form","$name","$email","$pwd","validator","typeMismatch","e","preventDefault","createEvent","form","d_start","d_end","d_endVisible","monthNames","isUpdating","$startDate","datepicker","autoclose","$startTime","timepicker","template","showInputs","minuteStep","showMeridian","$endDate","$endTime","off","subscribe","$startTrigger","$endRow","$endTrigger","onStartChange","onEndChange","getDateTime","d","t","parseTime","setHours","hours","setMinutes","minutes","time","arr","split","compareDates","updateDates","getHours","setDates","now","getMonth","getDate","getMinutes","clean","dom","$first","addListeners","$el","$remove","$add","remove","manageLinksVisibility","addElement","q","children","n","el","not","onGetPositionSuccess","position","ajax","url","coords","latitude","longitude","done","$geoInput","results","formatted_address","always","onGetPositionError","error","console","log","$geoTrigger","google","maps","places","Autocomplete","document","getElementById","types","navigator","geolocation","getCurrentPosition","makeEndValid","$end","$help","makeEndInvalid","$cancel","keyCode","push","collectEvent","getGuests","slice","reset","ready"],"mappings":"AAAA,GAAAA,QC0CA,SAAAC,GACA,YAIA,SAAAC,GAAAC,EAAAC,GACAC,KAAAF,QAAAA,EACAE,KAAAC,MAAAC,EACAF,KAAAG,UAAAP,EAAAQ,GAAAF,GAAAG,SACAL,KAAAD,QAAAH,EAAAU,QAAA,KAAAN,KAAAG,UAAAJ,GACAC,KAAAO,YAAAP,KAAAF,QAAAU,KACAR,KAAAS,SAAA,KACAT,KAAAU,QAAA,KACAV,KAAAW,WAAA,KACAX,KAAAY,cAAA,KACAZ,KAAAa,UAAA,KAEAb,KAAAc,OAdA,GAAAZ,GAAA,WAiBAL,GAAAkB,UAAAD,KAAA,WACAd,KAAAgB,WACAhB,KAAAiB,aACAjB,KAAAkB,cAGArB,EAAAkB,UAAAC,SAAA,WACA,GAAA,YAAAhB,KAAAO,YAAA,CACA,GAAAY,GAAAvB,EAAA,kCAEA,KAAA,GAAAwB,KAAApB,MAAAD,QAAAsB,SAAAC,SAAA,CACA,GAAAxB,GAAA,4DACAE,KAAAD,QAAAsB,SAAAC,SAAAF,GACA,OAEAD,GAAAI,OAAAzB,GAGAF,EAAAI,KAAAF,SAAA0B,QAAA,OAAAD,OAAAJ,KAIAtB,EAAAkB,UAAAE,WAAA,WACAjB,KAAAS,SAAAb,EAAAI,KAAAF,SACAE,KAAAU,QAAAV,KAAAS,SAAAe,QAAA,eACAxB,KAAAW,WAAAX,KAAAS,SAAAgB,SAAA,eACAzB,KAAAY,cAAAZ,KAAAU,QAAAgB,KAAA,qBAGA7B,EAAAkB,UAAAG,WAAA,WACA,GAAAS,GAAA3B,IAEA2B,GAAAlB,SAAAmB,GAAA,SAAAD,EAAA1B,MAAA,WACA0B,EAAAd,YACAc,EAAAd,UAAAc,EAAAlB,SAAAoB,SAIAF,EAAAlB,SAAAmB,GAAA,SAAAD,EAAA1B,MAAA,WACA0B,EAAAG,UACAH,EAAAI,UACAJ,EAAAd,WACAc,EAAAK,cAIAL,EAAAlB,SAAAmB,GAAA,QAAAD,EAAA1B,MAAA,YACA0B,EAAAlB,SAAAoB,OAAAF,EAAAd,aAIAc,EAAAG,UACAH,EAAAI,UAEAJ,EAAAK,eAIAL,EAAAlB,SAAAmB,GAAA,SAAAD,EAAA1B,MAAA,UAAA0B,EAAA1B,MAAA,WACA,YAAA0B,EAAApB,aACAoB,EAAAM,6BAKApC,EAAAkB,UAAAe,QAAA,WACA,MAAA,YAAA9B,KAAAO,YACAP,KAAAF,QAAAoC,gBAGAlC,KAAAmC,mBAAAL,SAGAjC,EAAAkB,UAAAoB,iBAAA,WACA,GAAAC,GAAA,eACAC,EAAA,QACAC,EAAA,QACAC,EAAA,QACAC,EAAA,0CACAlB,EAAAtB,KAAAS,SAAAoB,MACAY,IAEAA,GAAAC,cACAD,EAAAX,SAAA,EAEAW,EAAAC,WAAAN,UAAAA,EAAAO,KAAArB,IAAA,GAAA,EACAmB,EAAAC,WAAAL,MAAAA,EAAAM,KAAArB,IAAA,GAAA,EACAmB,EAAAC,WAAAJ,MAAAA,EAAAK,KAAArB,IAAA,GAAA,EACAmB,EAAAC,WAAAH,OAAAA,EAAAI,KAAArB,IAAA,GAAA,EACAmB,EAAAC,WAAAF,QAAAA,EAAAG,KAAArB,IAAA,GAAA,CAEA,KAAA,GAAAF,KAAAqB,GAAAC,WACAD,EAAAC,WAAAtB,MAAA,IAAAqB,EAAAX,SAAA,EASA,OANAW,GAAAX,QACA9B,KAAAF,QAAA8C,kBAAA,IAEA5C,KAAAF,QAAA8C,kBAAA,WAGAH,GAGA5C,EAAAkB,UAAAiB,UAAA,WACA,GAAAa,GAAA7C,KAAA8C,iBAEA9C,MAAAU,QAAAqC,SAAA,aACA/C,KAAAW,WAAAqC,YAAA,UAAAC,KAAAJ,IAGAhD,EAAAkB,UAAAgB,QAAA,WACA/B,KAAAW,WAAAoC,SAAA,UAAAE,OACAjD,KAAAU,QAAAsC,YAAA,cAGAnD,EAAAkB,UAAA+B,gBAAA,WACA,GAAAI,GAAAlD,KAAAF,QAAAqD,QAEA,KAAA,GAAA/B,KAAA8B,GACA,GAAAA,EAAA9B,GACA,MAAApB,MAAAoD,cAAAhC,EAIA,QAAA,GAGAvB,EAAAkB,UAAAqC,cAAA,SAAAhC,GACA,GAAAyB,GAAA7C,KAAAD,QAAAsB,SAAAD,EAMA,OAJA,YAAAA,IACAyB,EAAAA,EAAAQ,QAAA,MAAArD,KAAAS,SAAA6C,KAAA,eAGAT,GAGAhD,EAAAkB,UAAAkB,wBAAA,WACA,GAAAQ,GAAAzC,KAAAmC,mBACAoB,EAAA,CAEA,KAAA,GAAAnC,KAAAqB,GAAAC,WACAa,IAEAd,EAAAC,WAAAtB,GACApB,KAAAY,cACAc,KAAA,gBAAA6B,EAAA,KACAR,SAAA,uBACArB,KAAA,cACAsB,YAAA,wBACAD,SAAA,uBAEA/C,KAAAY,cACAc,KAAA,gBAAA6B,EAAA,KACAP,YAAA,gBACAtB,KAAA,cACAsB,YAAA,uBACAD,SAAA,yBAMAlD,EAAAkB,UAAAyC,gBAAA,WAWA,MAVAxD,MAAA8B,UACA9B,KAAA+B,UAEA/B,KAAAgC,YAGA,YAAAhC,KAAAO,aACAP,KAAAiC,2BAGA,GAIArC,EAAAQ,GAAAF,GAAA,SAAAuD,GACA,MAAAzD,MAAA0D,KAAA,WACA,GAAAC,GAAA/D,EAAAI,MACA4D,EAAAD,EAAAC,KAAA,UAAA1D,GACAH,EAAAH,EAAAU,UAAAV,EAAAQ,GAAAF,GAAAG,SAAAsD,EAAAC,OAAA,gBAAAH,IAAAA,EAEAG,IAAAD,EAAAC,KAAA,UAAA1D,EAAA0D,EAAA,GAAA/D,GAAAG,KAAAD,IACA,gBAAA0D,IAAAG,EAAAH,QAIA7D,EAAAQ,GAAAF,GAAAG,UACAgB,UACAwC,aAAA,wBACAC,SAAA,0BACAxC,UACAyC,UAAA,6BACA1B,MAAA,6BACAC,MAAA,6BACAC,OAAA,mBACAC,QAAA,2BAKAwB,QC1QArE,GAAAsE,QAEAtE,GAAAsE,KAAAC,OACAC,iBAAA,gBAGAxE,GAAAsE,KAAAnD,KAAA,WACAnB,GAAAsE,KAAAG,eAGAzE,GAAAsE,KAAAG,YAAA,WA2CA,QAAAC,KACAC,EAAAvB,SAAA,cACAwB,EAAAvB,YAAA,UACAwB,EAAAxB,YAAA,UAGA,QAAAyB,KACAH,EAAAtB,YAAA,cACAuB,EAAAxB,SAAA,UACAyB,EAAAzB,SAAA,UAGA,QAAA2B,KACAC,EAAA5B,SAAA,UACA6B,EAAA7B,SAAA,UACA8B,EAAA9B,SAAA,UAzDA,GAAA4B,GAAA/E,EAAA,iBACAgF,EAAAhF,EAAA,gBACAiF,EAAAjF,EAAA,eACA2E,EAAA3E,EAAA,QACA4E,EAAA5E,EAAA,mBACA0E,EAAA1E,EAAA,OAEAD,IAAAmF,OAAAC,UAGA,gBAAApF,GAAAsE,KAAAC,MAAAC,mBACAO,IACAL,IAEAW,WAAA,WACAP,IACAE,EAAA3B,YAAA,WACA,MAIA,eAAArD,GAAAsE,KAAAC,MAAAC,mBACAO,IACAL,IAEAW,WAAA,WACAP,IACAG,EAAA5B,YAAA,WACA,MAIA,QAAArD,GAAAsE,KAAAC,MAAAC,mBACAO,IACAL,IAEAW,WAAA,WACAP,IACAI,EAAA7B,YAAA,WACA,OClDArD,GAAAmF,UAEAnF,GAAAmF,OAAAZ,OACAY,WAGAnF,GAAAmF,OAAAhE,KAAA,WACA,GAAAmE,GAAArF,EAAA,2BACAqF,GAAAvB,KAAA,WACA9D,EAAAI,MAAA4B,GAAA,QAAA,WACAjC,GAAAsE,KAAAC,MAAAC,iBAAA,cACAxE,GAAAsE,KAAAG,mBAKAzE,GAAAmF,OAAAC,QAAA,WACA,GAAAG,GAAAtF,EAAA,8BACAuF,EAAAvF,EAAA,yBACAwF,EAAAxF,EAAA,4BAEAuF,GAAAlC,KAAA,IAEAtD,GAAAmF,OAAAZ,MAAAY,OAAAO,QACA1F,GAAAmF,OAAAZ,MAAAY,OAAAQ,QAAA,SAAAC,GAEA,GAAAC,GAAAD,EAAAC,KAAA,4BAAAD,EAAAC,KAAA,UAAA,GACAhF,EAAA+E,EAAA/E,KAAA,gDAAA+E,EAAA/E,KAAA,UAAA,GACAiF,EAAA,2BAAAD,EAAAhF,EAAA,QAGAkF,EAAA,GACAC,EAAA,EAEAJ,GAAAK,YAAA,GAAAC,OAAAC,gBAAAP,EAAAK,UAAA,IACAL,EAAAQ,UAAA,GAAAF,OAAAC,gBAAAP,EAAAQ,QAAA,IACAR,EAAAS,WAAAT,EAAAU,UAAAP,EAAA,uBACAH,EAAAU,UAAAN,EAAA,uBAEA,IAAAK,GAAA,8LAGAT,EAAAS,UAAA,IACAT,EAAAW,WAAA,IACAX,EAAAK,UACA,gBAGAO,EAAA,0LAGAZ,EAAAY,UACA,gBAGAF,EAAAV,EAAAU,QACA,4LAGAV,EAAAU,QAAA,IACAV,EAAAa,SAAA,IACAb,EAAAQ,QACA,gBACA,GAEAM,EAAAd,EAAAc,QACA,wLAGAd,EAAAc,QACA,gBACA,GAEAC,EAAA,yCAAAZ,EAAA,IAAAC,EAAA,KACAK,EACAG,EACAF,EACAI,EACA,SAGAE,EAAAhB,EAAAgB,KACA,wIAEAhB,EAAAgB,KAAA,gBACA,GAEAC,EAAAjB,EAAAiB,SACA,gJAEAjB,EAAAiB,SAAA,gBACA,GAEAC,EAAAF,GAAAC,EAAA,2CAAAD,EAAAC,EAAA,SAAA,GAGAE,EAAA,EAEAnB,GAAAmB,OAAArB,SACAE,EAAAmB,OAAApB,QAAA,SAAAqB,GACAD,GAAA,0LAEAC,EAAA,kBAIAD,EAAA,4CAAAA,EAAA,UAGAvB,EAAA5D,OAAA,sBAAAkE,EAAAa,EAAAG,EAAAC,EAAA,YAGAxB,EAAAlC,YAAA,UACAmC,EAAAnC,YAAA,UACAoC,EAAArC,SAAA,YAEAmC,EAAAnC,SAAA,UACAoC,EAAApC,SAAA,UACAqC,EAAApC,YAAA,YCtHArD,GAAAiH,aAAA,WACA,GAAAC,GAAAjH,EAAA,iBACAkH,EAAAlH,EAAA,sBACAmH,EAAAnH,EAAA,uBACAoH,EAAApH,EAAA,oBAEAkH,GAAAG,WACA5F,UACAwC,aAAA,iCACAC,SAAA,0DAIAiD,EAAAE,WACA5F,UACAwC,aAAA,8BACAqD,aAAA,wCAIAF,EAAAC,YAEAJ,EAAAjF,GAAA,SAAA,SAAAuF,GAQA,MANAL,GAAAG,UAAA,mBACAF,EAAAE,UAAA,mBACAD,EAAAC,UAAA,mBAEAE,EAAAC,iBAEAP,EAAA,GAAA3E,mBAAA,GACA,GAEAvC,GAAAsE,KAAAC,MAAAC,iBAAA,WACAxE,IAAAsE,KAAAG,kBClCAzE,GAAA0H,eAEA1H,GAAA0H,YAAAvG,KAAA,WACAnB,GAAA0H,YAAAf,KAAAxF,OACAnB,GAAA0H,YAAAX,OAAA5F,OACAnB,GAAA0H,YAAAZ,QACA9G,GAAA0H,YAAAC,KAAAxG,QAGAnB,GAAA0H,YAAAf,QAEA3G,GAAA0H,YAAAf,KAAApC,OACAqD,SAAA,EACAC,OAAA,EACAC,cAAA,EACAC,YACA,UAAA,WAAA,QAAA,QAAA,MAAA,OACA,OAAA,SAAA,YAAA,UAAA,WAAA,YAEAC,YAAA,GAGAhI,GAAA0H,YAAAf,KAAAxF,KAAA,WAmBA,QAAAA,KACA8G,EAAAC,YACAC,WAAA,EACA9B,UAAArG,GAAA0H,YAAAf,KAAApC,MAAAqD,UAGAQ,EAAAC,YACAC,UAAA,EACAC,YAAA,EACAC,WAAA,EACAC,cAAA,IAGAC,EAAAR,YACAC,WAAA,EACA9B,UAAArG,GAAA0H,YAAAf,KAAApC,MAAAsD,QAGAc,EAAAN,YACAC,UAAA,EACAC,YAAA,EACAC,WAAA,EACAC,cAAA,IAIAL,EAAAtG,SAAA,sBAAA8G,IAAA,SACAD,EAAA7G,SAAA,sBAAA8G,IAAA,SAGA,QAAAC,KACAC,EAAA7G,GAAA,QAAA,SAAAuF,GACAA,EAAAC,iBACAsB,EAAA1F,YAAA,UACAyF,EAAA1F,SAAA,UACApD,GAAA0H,YAAAf,KAAApC,MAAAuD,cAAA,IAGAkB,EAAA/G,GAAA,QAAA,SAAAuF,GACAA,EAAAC,iBACAsB,EAAA3F,SAAA,UACA0F,EAAAzF,YAAA,UACArD,GAAA0H,YAAAf,KAAApC,MAAAuD,cAAA,IAGAG,EAAAhG,GAAA,aAAA,WACAjC,GAAA0H,YAAAf,KAAApC,MAAAyD,aAEAhI,GAAA0H,YAAAf,KAAApC,MAAAyD,YAAA,EAEAiB,IAEAjJ,GAAA0H,YAAAf,KAAApC,MAAAyD,YAAA,KAGAI,EAAAC,aAAApG,GAAA,6BAAA,WACAjC,GAAA0H,YAAAf,KAAApC,MAAAyD,aAEAhI,GAAA0H,YAAAf,KAAApC,MAAAyD,YAAA,EAEAiB,IAEAjJ,GAAA0H,YAAAf,KAAApC,MAAAyD,YAAA,KAGAU,EAAAzG,GAAA,aAAA,WACAjC,GAAA0H,YAAAf,KAAApC,MAAAyD,aAEAhI,GAAA0H,YAAAf,KAAApC,MAAAyD,YAAA,EAEAkB,IAEAlJ,GAAA0H,YAAAf,KAAApC,MAAAyD,YAAA,KAGAW,EAAAN,aAAApG,GAAA,6BAAA,WACAjC,GAAA0H,YAAAf,KAAApC,MAAAyD,aAEAhI,GAAA0H,YAAAf,KAAApC,MAAAyD,YAAA,EAEAkB,IAEAlJ,GAAA0H,YAAAf,KAAApC,MAAAyD,YAAA,KAOA,QAAAmB,GAAAtI,GACA,GAAAuI,GACAC,CAkBA,OAhBA,SAAAxI,IACAuI,EAAAnB,EAAAC,WAAA,WACAmB,EAAAC,EAAAlB,EAAAlG,OAEAkH,EAAAG,SAAAF,EAAAG,OACAJ,EAAAK,WAAAJ,EAAAK,UAGA,OAAA7I,IACAuI,EAAAV,EAAAR,WAAA,WACAmB,EAAAC,EAAAX,EAAAzG,OAEAkH,EAAAG,SAAAF,EAAAG,OACAJ,EAAAK,WAAAJ,EAAAK,UAGAN,EAKA,QAAAE,GAAAK,GACA,GAAAC,GAAAD,EAAAE,MAAA,IAEA,QACAL,MAAAI,EAAA,IAAA,EACAF,QAAAE,EAAA,IAAA,GAKA,QAAAE,KACA,MAAA9J,IAAA0H,YAAAf,KAAApC,MAAAsD,MAAA7H,GAAA0H,YAAAf,KAAApC,MAAAqD,QAAA,MACA,GAGA,EAGA,QAAAqB,KAGA,GAFAjJ,GAAA0H,YAAAf,KAAAoD,YAAA,QAAAZ,EAAA,UAEAW,IAAA,CACA,GAAAV,GAAApJ,GAAA0H,YAAAf,KAAApC,MAAAqD,OAEAwB,GAAAG,SAAAH,EAAAY,WAAA,GACAhK,GAAA0H,YAAAf,KAAAoD,YAAA,MAAAX,IAIA,QAAAF,KACAlJ,GAAA0H,YAAAf,KAAAoD,YAAA,MAAAZ,EAAA,QAlKA,GAAAL,GAAA7I,EAAA,8BACAgI,EAAAhI,EAAA,iCACAmI,EAAAnI,EAAA,2BAEA8I,EAAA9I,EAAA,oBACA+I,EAAA/I,EAAA,4BACAyI,EAAAzI,EAAA,+BACA0I,EAAA1I,EAAA,wBAEAD,IAAA0H,YAAAf,KAAAsD,WAEA9I,IAEAnB,GAAA0H,YAAAf,KAAAoD,YAAA,QAAA/J,GAAA0H,YAAAf,KAAApC,MAAAqD,SACA5H,GAAA0H,YAAAf,KAAAoD,YAAA,MAAA/J,GAAA0H,YAAAf,KAAApC,MAAAsD,OAEAgB,KAsJA7I,GAAA0H,YAAAf,KAAAsD,SAAA,WACA,GAAAC,GAAA,GAAAhE,KAEAlG,IAAA0H,YAAAf,KAAApC,MAAAqD,QAAA,GAAA1B,MAAAgE,EAAA/D,cAAA+D,EAAAC,WAAAD,EAAAE,UAAAF,EAAAF,WAAA,GACAhK,GAAA0H,YAAAf,KAAApC,MAAAsD,MAAA,GAAA3B,MAAAgE,EAAA/D,cAAA+D,EAAAC,WAAAD,EAAAE,UAAAF,EAAAF,WAAA,IAGAhK,GAAA0H,YAAAf,KAAAoD,YAAA,SAAAlJ,EAAAuI,GACA,GAAAnB,GAAAhI,EAAA,iCACAmI,EAAAnI,EAAA,2BACAyI,EAAAzI,EAAA,+BACA0I,EAAA1I,EAAA,wBAEA,UAAAY,IACAb,GAAA0H,YAAAf,KAAApC,MAAAqD,QAAA,GAAA1B,MAAAkD,GAEApJ,GAAA0H,YAAAf,KAAApC,MAAAyD,YAAA,EACAC,EAAAC,WAAA,UAAAlI,GAAA0H,YAAAf,KAAApC,MAAAqD,QAAAuC,WAAA,EAAA,IAAAnK,GAAA0H,YAAAf,KAAApC,MAAAqD,QAAAwC,UAAA,IAAApK,GAAA0H,YAAAf,KAAApC,MAAAqD,QAAAzB,eACAiC,EAAAC,WAAA,UAAArI,GAAA0H,YAAAf,KAAApC,MAAAqD,QAAAoC,WAAA,IAAAhK,GAAA0H,YAAAf,KAAApC,MAAAqD,QAAAyC,cACArK,GAAA0H,YAAAf,KAAApC,MAAAyD,YAAA,GAGA,OAAAnH,IACAb,GAAA0H,YAAAf,KAAApC,MAAAsD,MAAA,GAAA3B,MAAAkD,GAEApJ,GAAA0H,YAAAf,KAAApC,MAAAyD,YAAA,EACAU,EAAAR,WAAA,UAAAlI,GAAA0H,YAAAf,KAAApC,MAAAsD,MAAAsC,WAAA,EAAA,IAAAnK,GAAA0H,YAAAf,KAAApC,MAAAsD,MAAAuC,UAAA,IAAApK,GAAA0H,YAAAf,KAAApC,MAAAsD,MAAA1B,eACAwC,EAAAN,WAAA,UAAArI,GAAA0H,YAAAf,KAAApC,MAAAsD,MAAAmC,WAAA,IAAAhK,GAAA0H,YAAAf,KAAApC,MAAAsD,MAAAwC,cACArK,GAAA0H,YAAAf,KAAApC,MAAAyD,YAAA,GAGAU,EAAAR,WAAA,eAAAlI,GAAA0H,YAAAf,KAAApC,MAAAqD,UAGA5H,GAAA0H,YAAAf,KAAA2D,MAAA,WACAtK,GAAA0H,YAAAf,KAAAsD,WACAjK,GAAA0H,YAAAf,KAAAoD,YAAA,QAAA/J,GAAA0H,YAAAf,KAAApC,MAAAqD,SACA5H,GAAA0H,YAAAf,KAAAoD,YAAA,MAAA/J,GAAA0H,YAAAf,KAAApC,MAAAsD,OACA5H,EAAA,oBAAAmD,SAAA,UACAnD,EAAA,8BAAAoD,YAAA,WAGArD,GAAA0H,YAAAX,UAEA/G,GAAA0H,YAAAX,OAAAwD,KACArF,MAAAjF,EAAA,eACAuK,OAAAvK,EAAA,8CAGAD,GAAA0H,YAAAX,OAAA5F,KAAA,WAOA,QAAAsJ,GAAAC,GACA,GAAAC,GAAAD,EAAA3I,KAAA,8BACA6I,EAAAF,EAAA3I,KAAA,0BAEA4I,GAAA1I,GAAA,QAAA,SAAAuF,GACAA,EAAAC,iBACAiD,EAAAG,SACA7K,GAAA0H,YAAAX,OAAA+D,0BAGAF,EAAA3I,GAAA,QAAA,SAAAuF,GACAA,EAAAC,iBACAgD,EAAAM,KACA/K,GAAA0H,YAAAX,OAAA+D,0BAIA,QAAAC,KACA,GAAAL,GAAAzK,EAAA,+CACAqI,EAAA,4RAQA,OAFApD,GAAAtD,OAAA8I,EAAA9I,OAAA0G,IAEAoC,EAjCA,GAAAxF,GAAAlF,GAAA0H,YAAAX,OAAAwD,IAAArF,MACAsF,EAAAxK,GAAA0H,YAAAX,OAAAwD,IAAAC,MAEAC,GAAAD,GACAxK,GAAA0H,YAAAX,OAAA+D,yBAiCA9K,GAAA0H,YAAAX,OAAA+D,sBAAA,WACA,GAAA5F,GAAAlF,GAAA0H,YAAAX,OAAAwD,IAAArF,MACA8F,EAAA9F,EAAA+F,SAAA,MAAAvF,MAEAR,GAAA+F,SAAA,MAAAlH,KAAA,SAAAmH,EAAAC,GACA,GAAAR,GAAA1K,EAAAkL,GAAApJ,KAAA,8BACA6I,EAAA3K,EAAAkL,GAAApJ,KAAA,0BAEAiJ,GAAA,EAAAE,GACAN,EAAAxH,SAAA,UACAuH,EAAAtH,YAAA,WACA2H,EAAA,GACAJ,EAAAvH,YAAA,UACAsH,EAAAtH,YAAA,YAEAuH,EAAAvH,YAAA,UACAsH,EAAAvH,SAAA,cAKApD,GAAA0H,YAAAX,OAAAuD,MAAA,WACA,GAAApF,GAAAlF,GAAA0H,YAAAX,OAAAwD,IAAArF,KAEAA,GAAAnD,KAAA,MAAAqJ,IAAA,gBAAAP,SACA7K,GAAA0H,YAAAX,OAAA+D,yBAGA9K,GAAA0H,YAAAZ,MAAA,WAeA,QAAAuE,GAAAC,GACArL,EAAAsL,MACAC,IAAA,4DACAF,EAAAG,OAAAC,SAAA,IAAAJ,EAAAG,OAAAE,UACA,iDACAC,KAAA,SAAA3H,GACA4H,EAAA3J,IAAA+B,EAAA6H,QAAA,GAAAC,mBAAA,MACAC,OAAA,WACAlH,MAIA,QAAAmH,GAAAC,GACApH,IACAqH,QAAAC,IAAAF,GAGA,QAAAxH,KACAG,EAAAxB,YAAA,UACAgJ,EAAAjJ,SAAA,UAGA,QAAA0B,KACAD,EAAAzB,SAAA,UACAiJ,EAAAhJ,YAAA,UAtCA,GAEAgJ,IAFA,GAAAC,QAAAC,KAAAC,OAAAC,aAAAC,SAAAC,eAAA,yBAAAC,OAAA,aAEA3M,EAAA,sBACA4L,EAAA5L,EAAA,yBACA4E,EAAAwH,EAAAvK,SAAA,WAEA+K,WAAAC,cACAT,EAAAhJ,YAAA,UACAgJ,EAAApK,GAAA,QAAA,WACAyC,IACAmI,UAAAC,YAAAC,mBAAA1B,EAAAY,OAgCAjM,GAAA0H,YAAAC,QAEA3H,GAAA0H,YAAAC,KAAAxG,KAAA,WA6DA,QAAA6L,KACAC,EAAA5J,YAAA,aACA6J,EAAA9J,SAAA,UACAsF,EAAA,GAAAzF,kBAAA,IACA0F,EAAA,GAAA1F,kBAAA,IAGA,QAAAkK,KACAF,EAAA7J,SAAA,aACA8J,EAAA7J,YAAA,UACAqF,EAAA,GAAAzF,kBAAA,WACA0F,EAAA,GAAA1F,kBAAA,WAvEA,GAAAiE,GAAAjH,EAAA,gBACAkH,EAAAlH,EAAA,qBACAgN,EAAAhN,EAAA,oBACAyI,EAAAzI,EAAA,yBACA0I,EAAA1I,EAAA,yBACAiN,EAAAD,EAAAlL,KAAA,eACAqL,EAAAnN,EAAA,sBAEAkH,GAAAG,YAEAJ,EAAAjF,GAAA,iBAAA,6DAAA,SAAAuF,GACA,GAAA6F,GAAA7F,EAAA6F,OACA,OAAA,MAAAA,GACA7F,EAAAC,kBACA,GAFA,SAMAP,EAAAjF,GAAA,SAAA,SAAAuF,GAyBA,MAxBAA,GAAAC,iBAGAN,EAAAG,UAAA,mBAGAtH,GAAA0H,YAAAf,KAAApC,MAAAsD,MAAA7H,GAAA0H,YAAAf,KAAApC,MAAAqD,SAAA,GACAuF,IAEAxE,EAAAN,aAAApG,GAAA,wBAAA,WACAjC,GAAA0H,YAAAf,KAAApC,MAAAsD,MAAA7H,GAAA0H,YAAAf,KAAApC,MAAAqD,QAAA,GACAoF,MAIArE,EAAAN,aAAApG,GAAA,wBAAA,WACAjC,GAAA0H,YAAAf,KAAApC,MAAAsD,MAAA7H,GAAA0H,YAAAf,KAAApC,MAAAqD,QAAA,GACAoF,OAIAA,IAGA9F,EAAA,GAAA3E,mBAAA,GACA,GAEAvC,GAAAmF,OAAAZ,MAAAY,OAAAmI,KAAAtN,GAAA0H,YAAAC,KAAA4F,gBACAvN,GAAA0H,YAAAC,KAAA2C,QACAtK,GAAAsE,KAAAC,MAAAC,iBAAA,OACAxE,GAAAsE,KAAAG,cAHAzE,UAOAoN,EAAAnL,GAAA,QAAA,SAAAuF,GACAA,EAAAC,iBACAzH,GAAA0H,YAAAC,KAAA2C,QACAtK,GAAAsE,KAAAC,MAAAC,iBAAA,OACAxE,GAAAsE,KAAAG,iBAkBAzE,GAAA0H,YAAAC,KAAA4F,aAAA,WAuBA,QAAAC,KACA,GAAA5D,KAUA,OARA3J,GAAA,8CAAA8D,KAAA,WACA,GAAAiD,GAAA/G,EAAAI,MAAA0B,KAAA,SAAAG,KAEA8E,IACA4C,EAAA0D,KAAAtG,KAIA4C,EAjCA,GAAAhE,KAoCA,OAnCAA,GAAAmB,UAEAnB,EAAAC,KAAA5F,EAAA,qBAAAiC,MACA0D,EAAA/E,KAAAZ,EAAA,qBAAAiC,MACA0D,EAAAS,UAAArG,GAAA0H,YAAAf,KAAApC,MAAAqD,QAAAwC,UACAxE,EAAAW,WAAAvG,GAAA0H,YAAAf,KAAApC,MAAAwD,WAAA/H,GAAA0H,YAAAf,KAAApC,MAAAqD,QAAAuC,YACAvE,EAAAK,UAAAjG,GAAA0H,YAAAf,KAAApC,MAAAqD,QAAAzB,cACAP,EAAAY,UAAAxG,GAAA0H,YAAAf,KAAApC,MAAAqD,QAAAoC,WAAA,KAAA,IAAAhK,GAAA0H,YAAAf,KAAApC,MAAAqD,QAAAyC,cAAAoD,MAAA,IAEAzN,GAAA0H,YAAAf,KAAApC,MAAAuD,eACAlC,EAAAU,QAAAtG,GAAA0H,YAAAf,KAAApC,MAAAsD,MAAAuC,UACAxE,EAAAa,SAAAzG,GAAA0H,YAAAf,KAAApC,MAAAwD,WAAA/H,GAAA0H,YAAAf,KAAApC,MAAAsD,MAAAsC,YACAvE,EAAAQ,QAAApG,GAAA0H,YAAAf,KAAApC,MAAAsD,MAAA1B,cACAP,EAAAc,QAAA1G,GAAA0H,YAAAf,KAAApC,MAAAsD,MAAAmC,WAAA,KAAA,IAAAhK,GAAA0H,YAAAf,KAAApC,MAAAsD,MAAAwC,cAAAoD,MAAA,KAGA7H,EAAAgB,KAAA3G,EAAA,qBAAAiC,MACA0D,EAAAiB,SAAA5G,EAAA,yBAAAiC,MACA0D,EAAAmB,OAAAyG,IACA5H,EAAA1C,QAAAjD,EAAA,wBAAAiC,MAgBA0D,GAGA5F,GAAA0H,YAAAC,KAAA2C,MAAA,WACArK,EAAA,gBAAA,GAAAyN,QACA1N,GAAA0H,YAAAf,KAAA2D,QACAtK,GAAA0H,YAAAX,OAAAuD,SL3cArK,EAAAyM,UAAAiB,MAAA,WACA3N,GAAAsE,KAAAnD,OACAnB,GAAA0H,YAAAvG,OACAnB,GAAAiH,eACAjH,GAAAmF,OAAAhE","file":"master.js","sourcesContent":["var UI = {};\n\n// DESCRIPTION\n// ============================================================\n// validator manages validation process on a field level.\n// it means, that you can init it on a specific field\n// pass options (messages), \n// set constraints using html attributes (see Constraint Validation API)\n// and enjoy the process\n//\n// important: validator supports slightly different logic for regular fields and password* fields\n// * password validation options are hardcoded\n\n// USAGE\n// ============================================================\n// $('#regPwd').validator(options);\n\n// OPTIONS\n// ============================================================\n// take a look at module's default options\n// it is allowed to redefine any predefined error messages\n// $('#regName').validator({\n//      messages: {\n//      valueMissing: 'We really need your name, mate',\n//      tooShort: 'The name is too short, bro (at least %N% characters)'\n//    }\n//  });\n\n// GENERATED MARKUP\n// ============================================================\n// in case of password field\n// module generates additional markup (to provide hints)\n// <ul class=\"list-unstyled\">\n//   <li><span class=\"glyphicon glyphicon-ban-circle\"></span> Hint text</li>\n//   ...\n//   <li><span class=\"glyphicon glyphicon-ban-circle\"></span> Hint text</li>\n// </ul>  \n\n// API\n// ============================================================\n// you can force validation on a field\n// $('#regName').validator('forceValidation');\n\n\n+function ($) {\n  'use strict';\n  \n  var moduleName = 'validator';\n\n  function Module (element, options) {\n    this.element        = element;\n    this._name          = moduleName;\n    this._defaults      = $.fn[moduleName].defaults;\n    this.options        = $.extend(true, {}, this._defaults, options );\n    this.elementType    = this.element.type;\n    this.$element       = null;\n    this.$parent        = null;\n    this.$helpBlock     = null;\n    this.$messagesList  = null; // used only for 'password' fields\n    this.everValue      = null;\n    \n    this.init();\n  }\n  \n  Module.prototype.init = function () {\n    this.buildDom();\n    this.buildCache();\n    this.bindEvents();\n  };\n  \n  Module.prototype.buildDom = function() {\n    if (this.elementType == 'password') {\n      var $ul = $('<ul class=\"list-unstyled\"></ul>');\n      \n      for (var key in this.options.messages.password) {\n        var element = '<li><span class=\"glyphicon glyphicon-ban-circle\"></span> ' \n                      + this.options.messages.password[key] \n                      + '</li>';\n        \n        $ul.append(element);\n      }\n      \n      $(this.element).closest('div').append($ul);\n    }\n  };\n  \n  Module.prototype.buildCache = function() {\n    this.$element   = $(this.element);\n    this.$parent    = this.$element.closest('.form-group');\n    this.$helpBlock = this.$element.siblings('.help-block');\n    this.$messagesList = this.$parent.find('ul.list-unstyled');\n  };\n  \n  Module.prototype.bindEvents = function() {\n    var module = this;\n    \n    module.$element.on('focus' + '.' + module._name, function() {\n      if ( !module.everValue ) {\n        module.everValue = module.$element.val();\n      }\n    });\n    \n    module.$element.on('input' + '.' + module._name, function() {\n      if ( module.isValid() ) {\n        module.cleanUp();\n      } else if ( module.everValue ) {\n        module.showError();\n      }\n    });\n    \n    module.$element.on('blur' + '.' +  module._name, function() {\n      if ( !module.$element.val() && !module.everValue ) {\n        return;\n      }\n      \n      if ( module.isValid() ) {\n        module.cleanUp();\n      } else {\n        module.showError();\n      }\n    });\n    \n    module.$element.on('input' + '.' + module._name + ', ' + 'blur' + '.' +  module._name , function() {\n      if ( module.elementType == 'password' ) {\n        module.processPasswordMessages();\n      }\n    });\n  };\n  \n  Module.prototype.isValid = function() {\n    if ( this.elementType != 'password' ) {\n      return this.element.checkValidity();\n    }\n    \n    return this.isValid_password().isValid;\n  };\n  \n  Module.prototype.isValid_password = function() {\n    var minLength = /^[\\s\\S]{8,}$/;\n    var upper = /[A-Z]/;\n    var lower = /[a-z]/;\n    var number = /[0-9]/;\n    var special = /[ !\"#$%&'()*+,\\-./:;<=>?@[\\\\\\]^_`{|}~]/;\n    var password = this.$element.val();\n    var result = {};\n    \n    result.conditions = {};\n    result.isValid = true;\n    \n    result.conditions.minLength = minLength.test(password) ? true : false;\n    result.conditions.upper = upper.test(password) ? true : false;\n    result.conditions.lower = lower.test(password) ? true : false;\n    result.conditions.number = number.test(password) ? true : false;\n    result.conditions.special = special.test(password) ? true : false;\n    \n    for (var key in result.conditions) {\n      if( result.conditions[key] === false ) result.isValid = false;\n    }\n    \n    if (result.isValid) {\n      this.element.setCustomValidity('');\n    } else {\n      this.element.setCustomValidity('invalid');\n    }\n    \n    return result;\n  };\n  \n  Module.prototype.showError = function() {\n    var message = this.getErrorMessage();\n    \n    this.$parent.addClass('has-error');\n    this.$helpBlock.removeClass('hidden').html(message);\n  };\n  \n  Module.prototype.cleanUp = function() {\n    this.$helpBlock.addClass('hidden').html();\n    this.$parent.removeClass('has-error');\n  };\n  \n  Module.prototype.getErrorMessage = function() {\n    var states = this.element.validity;\n    \n    for (var key in states) {\n      if ( states[key] ) {\n        return this.formatMessage(key);\n      }\n    }\n    \n    return false;\n  };\n  \n  Module.prototype.formatMessage = function(key) {\n    var message = this.options.messages[key];\n    \n    if (key == 'tooShort') {\n      message = message.replace('%N%', this.$element.attr('minlength'));\n    }\n    \n    return message;\n  };\n  \n  Module.prototype.processPasswordMessages = function() {\n    var result = this.isValid_password();\n    var counter = 0;\n    \n    for (var key in result.conditions) {\n      counter++;\n      \n      if (result.conditions[key]) {\n        this.$messagesList\n          .find('li:nth-child(' + counter + ')')\n          .addClass('text-success strong')\n          .find('.glyphicon')\n          .removeClass('glyphicon-ban-circle')\n          .addClass('glyphicon-ok-circle');\n      } else {\n        this.$messagesList\n          .find('li:nth-child(' + counter + ')')\n          .removeClass('text-success')\n          .find('.glyphicon')\n          .removeClass('glyphicon-ok-circle')\n          .addClass('glyphicon-ban-circle');\n      }\n    }\n  };\n  \n  // API methods\n  Module.prototype.forceValidation = function() {\n    if ( this.isValid() ) {\n      this.cleanUp();\n    } else {\n      this.showError();\n    }\n    \n    if ( this.elementType == 'password' ) {\n      this.processPasswordMessages();\n    }\n    \n    return false;\n  };\n  // end of API methods\n  \n  $.fn[moduleName] = function (option) {\n    return this.each(function () {\n      var $this   = $(this);\n      var data    = $this.data( 'module_' + moduleName );\n      var options = $.extend({}, $.fn[moduleName].defaults, $this.data(), typeof option == 'object' && option);\n      \n      if (!data) $this.data( 'module_' + moduleName, ( data = new Module(this, options) ) );\n      if (typeof option == 'string') data[option]();\n    });\n  };\n\n  $.fn[moduleName].defaults = {\n    messages: {\n      valueMissing: 'The field is required',\n      tooShort: 'At least %N% characters',\n      password: { \n        minlength: 'At least 8 characters long', // todo: get rid of hardcoded parameters\n        upper: 'Contains uppercase letters',\n        lower: 'Contains lowercase letters',\n        number: 'Contains numbers',\n        special: 'Contains punctuation'\n      }\n    }\n  };\n\n}(jQuery);\nUI.core = {};\n\nUI.core.model = {\n  applicationState: 'registration'\n};\n\nUI.core.init = function() {\n  UI.core.viewBuilder();\n};\n\nUI.core.viewBuilder = function() {\n  var $registration = $('.registration');\n  var $createEvent  = $('.createEvent');\n  var $list         = $('.eventsList');\n  var $dim          = $('.dim');\n  var $spinner      = $('.spinner_global');\n  var $body         = $('body');\n  \n  UI.events.process();\n  \n  // login state\n  if (UI.core.model.applicationState == 'registration') {\n    hideAll();\n    showSpinner();\n    \n    setTimeout(function(){\n      hideSpinner();\n      $registration.removeClass('hidden');\n    }, 1000);\n  }\n  \n  // events list state\n  if (UI.core.model.applicationState == 'createEvent') {\n    hideAll();\n    showSpinner();\n    \n    setTimeout(function(){\n      hideSpinner();\n      $createEvent.removeClass('hidden');\n    }, 1000);\n  }\n  \n  // events list state\n  if (UI.core.model.applicationState == 'list') {\n    hideAll();\n    showSpinner();\n    \n    setTimeout(function(){\n      hideSpinner();\n      $list.removeClass('hidden');\n    }, 1000);\n  }\n  \n  function showSpinner() {\n    $body.addClass('modal-open');\n    $dim.removeClass('hidden');\n    $spinner.removeClass('hidden');\n  }\n  \n  function hideSpinner() {\n    $body.removeClass('modal-open');\n    $dim.addClass('hidden');\n    $spinner.addClass('hidden');\n  }\n  \n  function hideAll() {\n    $registration .addClass('hidden');\n    $createEvent  .addClass('hidden');\n    $list         .addClass('hidden');\n  }\n};\nUI.events = {};\n\nUI.events.model = {\n  events: []\n};\n\nUI.events.init = function() {\n  var $btns = $('.eventsList .btn-success');\n  $btns.each(function() {\n    $(this).on('click', function() {\n      UI.core.model.applicationState = 'createEvent';\n      UI.core.viewBuilder();\n    });\n  });\n};\n\nUI.events.process = function() {\n  var $header   = $('.eventsList > .page-header');\n  var $events   = $('.eventsList > .events');\n  var $empty    = $('.eventsList > .emptyState');\n  \n  $events.html('');\n  \n  if (UI.events.model.events.length) {\n    UI.events.model.events.forEach(function(event) {\n      // event title\n      var name = event.name ? '<span class=\"event-name\">' + event.name + '</span>' : '';\n      var type = event.type ? '<span class=\"label label-primary event-type\">' + event.type + '</span>' : '';\n      var title = '<h2 class=\"event-title\">' + name + type + '</h2>';\n      \n      // event when\n      var sameDate = '';\n      var noEndDate = '';\n      \n      if (event.startYear == new Date().getFullYear()) {event.startYear = '';}\n      if (event.endYear   == new Date().getFullYear()) {event.endYear = '';}\n      if (event.startDate == event.endDate) {sameDate = 'event-when_sameDate';}\n      if (!event.endDate) {noEndDate = 'event-when_onlyStart';}\n      \n      var startDate = '<div class=\"event-fieldset-field event-when-startDate\">' +\n                        '<span class=\"event-fieldset-label\">Date:</span>' +\n                        '<span class=\"event-fieldset-value\"><span class=\"glyphicon glyphicon-calendar\"></span>' + \n                          event.startDate + ' ' + \n                          event.startMonth + ' ' + \n                          event.startYear +\n                        '</span>' +\n                      '</div>';\n      \n      var startTime = '<div class=\"event-fieldset-field event-when-startTime\">' +\n                        '<span class=\"event-fieldset-label\">Time:</span>' +\n                        '<span class=\"event-fieldset-value\"><span class=\"glyphicon glyphicon-time\"></span>' + \n                          event.startTime + \n                        '</span>' +\n                      '</div>';\n      \n      var endDate   = event.endDate ? \n                      '<div class=\"event-fieldset-field event-when-endDate\">' +\n                        '<span class=\"event-fieldset-label\">Date:</span>' +\n                        '<span class=\"event-fieldset-value\"><span class=\"glyphicon glyphicon-calendar\"></span>' + \n                          event.endDate + ' ' + \n                          event.endMonth + ' ' + \n                          event.endYear +\n                        '</span>' +\n                      '</div>' : '';\n\n      var endTime   = event.endTime ? \n                      '<div class=\"event-fieldset-field event-when-endTime\">' +\n                        '<span class=\"event-fieldset-label\">Time:</span>' +\n                        '<span class=\"event-fieldset-value\"><span class=\"glyphicon glyphicon-time\"></span>' + \n                          event.endTime + \n                        '</span>' +\n                      '</div>' : '';\n      \n      var when      = '<div class=\"event-fieldset event-when ' + sameDate + ' ' + noEndDate + '\">' +\n                        startDate +\n                        startTime +\n                        endDate + \n                        endTime +\n                      '</div>';\n      \n      // event where\n      var host      = event.host ? \n                      '<div class=\"event-fieldset-field event-where-host\">' +\n                        '<span class=\"event-fieldset-label\">Host:</span>' +\n                        '<span class=\"event-fieldset-value\">' + event.host + '</span>' +\n                      '</div>' : '';\n      \n      var location  = event.location ? \n                      '<div class=\"event-fieldset-field event-where-location\">' +\n                        '<span class=\"event-fieldset-label\">Location:</span>' +\n                        '<span class=\"event-fieldset-value\">' + event.location + '</span>' +\n                      '</div>' : '';\n      \n      var where     = host || location ? '<div class=\"event-fieldset event-where\">' + host + location + '</div>' : '';\n      \n      // event guests\n      var guests = '';\n      \n      if (event.guests.length) {\n        event.guests.forEach(function(guest) {\n          guests += '<div class=\"event-fieldset-field event-guests-guest\">' +\n                      '<span class=\"event-fieldset-label\">Guests:</span>' +\n                      '<span class=\"event-fieldset-value\"><span class=\"glyphicon glyphicon-user\"></span>' + guest + '</span>' +\n                    '</div>';\n        });\n        \n        guests = '<div class=\"event-fieldset event-guests\">' + guests + '</div>';\n      }\n      \n      $events.append( '<div class=\"event\">' + title + when + where + guests + '</div>');\n    });\n    \n    $header.removeClass('hidden');\n    $events.removeClass('hidden');\n    $empty.addClass('hidden');\n  } else {\n    $header.addClass('hidden');\n    $events.addClass('hidden');\n    $empty.removeClass('hidden');\n  }\n};\nUI.registration = function() {\n  var $form = $('#registration');\n  var $name = $('#registration-name');\n  var $email = $('#registration-email');\n  var $pwd = $('#registration-pwd');\n  \n  $name.validator({\n    messages: {\n      valueMissing: 'We really need your name, mate',\n      tooShort: 'The name is too short, bro (at least %N% characters)'\n    }\n  });\n  \n  $email.validator({\n    messages: {\n      valueMissing: 'What if it is an emergency?',\n      typeMismatch: 'It doesn\\'t look like a valid email'\n    }\n  });\n  \n  $pwd.validator();\n  \n  $form.on('submit', function(e) {\n    // call force validation\n    $name.validator('forceValidation');\n    $email.validator('forceValidation');\n    $pwd.validator('forceValidation');\n    \n    e.preventDefault();\n    \n    if ($form[0].checkValidity() === false) {\n      return false;\n    } else {\n      UI.core.model.applicationState = 'list';\n      UI.core.viewBuilder();\n    }\n  });\n};\nUI.createEvent = {};\n\nUI.createEvent.init = function() {\n  UI.createEvent.when.init();\n  UI.createEvent.guests.init();\n  UI.createEvent.where();\n  UI.createEvent.form.init();\n};\n\nUI.createEvent.when = {};\n\nUI.createEvent.when.model = {\n  d_start       : true,\n  d_end         : true,\n  d_endVisible  : false,\n  monthNames    : [\n                  'January', 'February', 'March', 'April', 'May', 'June',\n                  'July', 'August', 'September', 'October', 'November', 'December'\n                  ],\n  isUpdating    : false\n};\n\nUI.createEvent.when.init = function() {\n  var $startTrigger   = $('#createEvent-start-trigger');\n  var $startDate      = $('#createEvent-start-date-group');\n  var $startTime      = $('#createEvent-start-time');\n  \n  var $endRow         = $('#createEvent-end');\n  var $endTrigger     = $('#createEvent-end-trigger');\n  var $endDate        = $('#createEvent-end-date-group');\n  var $endTime        = $('#createEvent-end-time');\n  \n  UI.createEvent.when.setDates();\n  \n  init();\n  \n  UI.createEvent.when.updateDates('start', UI.createEvent.when.model.d_start);\n  UI.createEvent.when.updateDates('end', UI.createEvent.when.model.d_end);\n  \n  subscribe();\n  \n  function init() {\n    $startDate.datepicker({\n      autoclose: true,\n      startDate: UI.createEvent.when.model.d_start\n    });\n    \n    $startTime.timepicker({\n      template: false,\n      showInputs: false,\n      minuteStep: 5,\n      showMeridian: false\n    });\n    \n    $endDate.datepicker({\n      autoclose: true,\n      startDate: UI.createEvent.when.model.d_end\n    });\n    \n    $endTime.timepicker({\n      template: false,\n      showInputs: false,\n      minuteStep: 5,\n      showMeridian: false\n    });\n    \n    // fixing weird issue with timepicker's input-group-addon\n    $startTime.siblings('.input-group-addon').off('click');\n    $endTime  .siblings('.input-group-addon').off('click');\n  }\n  \n  function subscribe() {\n    $startTrigger.on('click', function(e) {\n      e.preventDefault();\n      $endRow.removeClass('hidden');\n      $startTrigger.addClass('hidden');\n      UI.createEvent.when.model.d_endVisible = true;\n    });\n    \n    $endTrigger.on('click', function(e) {\n      e.preventDefault();\n      $endRow.addClass('hidden');\n      $startTrigger.removeClass('hidden');\n      UI.createEvent.when.model.d_endVisible = false;\n    });\n\n    $startDate.on('changeDate', function() {\n      if (UI.createEvent.when.model.isUpdating) return;\n      \n      UI.createEvent.when.model.isUpdating = true;\n      \n      onStartChange();\n      \n      UI.createEvent.when.model.isUpdating = false;\n    });\n    \n    $startTime.timepicker().on('changeTime.timepicker blur', function() {\n      if (UI.createEvent.when.model.isUpdating) return;\n      \n      UI.createEvent.when.model.isUpdating = true;\n      \n      onStartChange();\n      \n      UI.createEvent.when.model.isUpdating = false;\n    });\n    \n    $endDate.on('changeDate', function() {\n      if (UI.createEvent.when.model.isUpdating) return;\n      \n      UI.createEvent.when.model.isUpdating = true;\n      \n      onEndChange();\n      \n      UI.createEvent.when.model.isUpdating = false;\n    });\n    \n    $endTime.timepicker().on('changeTime.timepicker blur', function() {\n      if (UI.createEvent.when.model.isUpdating) return;\n      \n      UI.createEvent.when.model.isUpdating = true;\n      \n      onEndChange();\n      \n      UI.createEvent.when.model.isUpdating = false;\n    });\n  }\n  \n  // start\n  // end\n  // returns d;\n  function getDateTime(type) {\n    var d;\n    var t;\n    \n    if (type == 'start') {\n      d = $startDate.datepicker('getDate');\n      t = parseTime( $startTime.val() );\n      \n      d.setHours( t.hours );\n      d.setMinutes( t.minutes );\n    }\n    \n    if (type == 'end') {\n      d = $endDate.datepicker('getDate');\n      t = parseTime( $endTime.val() );\n      \n      d.setHours( t.hours );\n      d.setMinutes( t.minutes );\n    }\n    \n    return d;\n  }\n  \n  // time\n  // returns {hours: 'HH', minutes: 'MM'}\n  function parseTime(time) {\n    var arr = time.split(':');\n    \n    return {\n      hours: arr[0] || 0,\n      minutes: arr[1]  || 0\n    }\n  }\n  \n  // returns true if (UI.createEvent.when.model.d_end < UI.createEvent.when.model.d_start + 1 hour)\n  function compareDates() {\n    if ( UI.createEvent.when.model.d_end - UI.createEvent.when.model.d_start < 3600000 ) {\n      return true;\n    }\n    \n    return false;\n  }\n  \n  function onStartChange() {\n    UI.createEvent.when.updateDates('start', getDateTime('start'));\n    \n    if ( compareDates() ) {\n      var d = UI.createEvent.when.model.d_start;\n      \n      d.setHours( d.getHours() + 1 );\n      UI.createEvent.when.updateDates( 'end', d );\n    }\n  }\n  \n  function onEndChange() {\n    UI.createEvent.when.updateDates('end', getDateTime('end'));\n  }\n};\n\nUI.createEvent.when.setDates = function() {\n  var now                       = new Date();\n  \n  UI.createEvent.when.model.d_start  = new Date( now.getFullYear(), now.getMonth(), now.getDate(), now.getHours() + 1 );\n  UI.createEvent.when.model.d_end    = new Date( now.getFullYear(), now.getMonth(), now.getDate(), now.getHours() + 2 );\n};\n\nUI.createEvent.when.updateDates = function(type, d) {\n  var $startDate      = $('#createEvent-start-date-group');\n  var $startTime      = $('#createEvent-start-time');\n  var $endDate        = $('#createEvent-end-date-group');\n  var $endTime        = $('#createEvent-end-time');\n  \n  if (type == 'start') {\n    UI.createEvent.when.model.d_start = new Date( d );\n    \n    UI.createEvent.when.model.isUpdating = true;\n    $startDate.datepicker( 'setDate', (UI.createEvent.when.model.d_start.getMonth() + 1) + '-' + UI.createEvent.when.model.d_start.getDate() + '-' + UI.createEvent.when.model.d_start.getFullYear() );\n    $startTime.timepicker( 'setTime', UI.createEvent.when.model.d_start.getHours() + ':' + UI.createEvent.when.model.d_start.getMinutes() );\n    UI.createEvent.when.model.isUpdating = false;\n  }\n  \n  if (type == 'end') {\n    UI.createEvent.when.model.d_end = new Date( d );\n    \n    UI.createEvent.when.model.isUpdating = true;\n    $endDate.datepicker( 'setDate', (UI.createEvent.when.model.d_end.getMonth() + 1) + '-' + UI.createEvent.when.model.d_end.getDate() + '-' + UI.createEvent.when.model.d_end.getFullYear() );\n    $endTime.timepicker( 'setTime', UI.createEvent.when.model.d_end.getHours() + ':' + UI.createEvent.when.model.d_end.getMinutes() );\n    UI.createEvent.when.model.isUpdating = false;\n  }\n  \n  $endDate.datepicker( 'setStartDate', UI.createEvent.when.model.d_start );\n};\n\nUI.createEvent.when.clean = function() {\n  UI.createEvent.when.setDates();\n  UI.createEvent.when.updateDates('start', UI.createEvent.when.model.d_start);\n  UI.createEvent.when.updateDates('end', UI.createEvent.when.model.d_end);\n  $('#createEvent-end').addClass('hidden');\n  $('#createEvent-start-trigger').removeClass('hidden');\n};\n\nUI.createEvent.guests = {};\n\nUI.createEvent.guests.dom = {\n  $list: $('.guestsList'),\n  $first: $('.guestsList .guestsList-guest:first-child')\n};\n\nUI.createEvent.guests.init = function() {\n  var $list  = UI.createEvent.guests.dom.$list;\n  var $first = UI.createEvent.guests.dom.$first;\n  \n  addListeners( $first );\n  UI.createEvent.guests.manageLinksVisibility();\n  \n  function addListeners( $el ) {\n    var $remove = $el.find('.guestsList-trigger_remove');\n    var $add    = $el.find('.guestsList-trigger_add');\n    \n    $remove.on('click', function(e) {\n      e.preventDefault();\n      $el.remove();\n      UI.createEvent.guests.manageLinksVisibility();\n    });\n    \n    $add.on('click', function(e) {\n      e.preventDefault();\n      addListeners( addElement() );\n      UI.createEvent.guests.manageLinksVisibility();\n    });\n  }\n  \n  function addElement() {\n    var $el       = $('<li class=\"guestsList-guest clearfix\"></li>');\n    var template  = '<div class=\"form-group guestsList-guest-name\">' +\n                      '<input type=\"text\" class=\"form-control\" placeholder=\"guest\\'s name\">' +\n                    '</div>' +\n                    '<a href=\"#\" class=\"guestsList-trigger guestsList-trigger_remove hidden\">Remove</a>' +\n                    '<a href=\"#\" class=\"guestsList-trigger guestsList-trigger_add hidden\">+ Guest</a>';\n    \n    $list.append( $el.append(template) );\n    \n    return $el;\n  }\n};\n\nUI.createEvent.guests.manageLinksVisibility = function() {\n  var $list  = UI.createEvent.guests.dom.$list;\n  var q      = $list.children('li').length;\n  \n  $list.children('li').each(function(n, el) {\n    var $remove = $(el).find('.guestsList-trigger_remove');\n    var $add    = $(el).find('.guestsList-trigger_add');\n    \n    if (n < q - 1) {\n      $add.addClass('hidden');\n      $remove.removeClass('hidden');\n    } else if (q > 1) {\n      $add.removeClass('hidden');\n      $remove.removeClass('hidden');\n    } else {\n      $add.removeClass('hidden');\n      $remove.addClass('hidden');\n    }\n  });\n};\n\nUI.createEvent.guests.clean = function() {\n  var $list  = UI.createEvent.guests.dom.$list;\n  \n  $list.find('li').not(':first-child').remove();\n  UI.createEvent.guests.manageLinksVisibility();\n};\n\nUI.createEvent.where = function() {\n  var autocomplete  = new google.maps.places.Autocomplete( document.getElementById('createEvent-location'), {types: ['geocode']});\n  //var geocoder      = new google.maps.Geocoder();\n  var $geoTrigger   = $('.geoLocation-icon');\n  var $geoInput     = $('#createEvent-location');\n  var $spinner      = $geoTrigger.siblings('.spinner');\n  \n  if (navigator.geolocation) {\n    $geoTrigger.removeClass('hidden');\n    $geoTrigger.on('click', function() {\n      showSpinner();\n      navigator.geolocation.getCurrentPosition(onGetPositionSuccess, onGetPositionError);\n    });\n  }\n  \n  function onGetPositionSuccess(position) {\n    $.ajax({\n      url: 'https://maps.googleapis.com/maps/api/geocode/json?latlng=' \n            + position.coords.latitude + ',' + position.coords.longitude \n            + '&key=AIzaSyDjdMGfSpv44b2bVuKVW8AxBGmXTVHTRzA'\n    }).done(function(data) {\n      $geoInput.val( data.results[0].formatted_address || '' );\n    }).always(function() {\n      hideSpinner();\n    });\n  }\n  \n  function onGetPositionError(error) {\n    hideSpinner();\n    console.log(error);\n  }\n  \n  function showSpinner() {\n    $spinner.removeClass('hidden');\n    $geoTrigger.addClass('hidden');\n  }\n  \n  function hideSpinner() {\n    $spinner.addClass('hidden');\n    $geoTrigger.removeClass('hidden');\n  }\n};\n\nUI.createEvent.form = {};\n\nUI.createEvent.form.init = function() {\n  var $form     = $('#createEvent');\n  var $name     = $('#createEvent-name');\n  var $end      = $('#createEvent-end');\n  var $endDate  = $('#createEvent-end-date');\n  var $endTime  = $('#createEvent-end-time');\n  var $help     = $end.find('.help-block');\n  var $cancel   = $('#createEvent-cancel');\n  \n  $name.validator();\n  \n  $form.on('keyup keypress', ':input:not(textarea):not([type=submit]):not([type=button])', function(e) {\n    var keyCode = e.keyCode;\n    if (keyCode === 13) { \n      e.preventDefault();\n      return false;\n    }\n  });\n  \n  $form.on('submit', function(e) {\n    e.preventDefault();\n    \n    // call force validation\n    $name.validator('forceValidation');\n    \n    // validate end time\n    if (UI.createEvent.when.model.d_end - UI.createEvent.when.model.d_start <= 0) {\n      makeEndInvalid();\n      \n      $endTime.timepicker().on('changeTime.timepicker', function() {\n        if (UI.createEvent.when.model.d_end - UI.createEvent.when.model.d_start > 0) {\n          makeEndValid()\n        }\n      });\n      \n      $endTime.timepicker().on('changeTime.timepicker', function() {\n        if (UI.createEvent.when.model.d_end - UI.createEvent.when.model.d_start > 0) {\n          makeEndValid()\n        }\n      });\n    } else {\n      makeEndValid()\n    }\n\n    if ($form[0].checkValidity() === false) {\n      return false;\n    } else {\n      UI.events.model.events.push( UI.createEvent.form.collectEvent() );\n      UI.createEvent.form.clean();\n      UI.core.model.applicationState = 'list';\n      UI.core.viewBuilder();\n    }\n  });\n  \n  $cancel.on('click', function(e) {\n    e.preventDefault();\n    UI.createEvent.form.clean();\n    UI.core.model.applicationState = 'list';\n    UI.core.viewBuilder();\n  })\n  \n  function makeEndValid() {\n    $end.removeClass('has-error');\n    $help.addClass('hidden');\n    $endDate[0].setCustomValidity('');\n    $endTime[0].setCustomValidity('');\n  }\n  \n  function makeEndInvalid() {\n    $end.addClass('has-error');\n      $help.removeClass('hidden');\n      $endDate[0].setCustomValidity('invalid');\n      $endTime[0].setCustomValidity('invalid');\n  }\n};\n\nUI.createEvent.form.collectEvent = function() {\n  var event = {};\n  event.guests = [];\n  \n  event.name        = $('#createEvent-name').val();\n  event.type        = $('#createEvent-type').val();\n  event.startDate   = UI.createEvent.when.model.d_start.getDate();\n  event.startMonth  = UI.createEvent.when.model.monthNames[ UI.createEvent.when.model.d_start.getMonth() ];\n  event.startYear   = UI.createEvent.when.model.d_start.getFullYear();\n  event.startTime   = UI.createEvent.when.model.d_start.getHours()  + ':' + ('0' + UI.createEvent.when.model.d_start.getMinutes() ).slice(-2);\n  \n  if (UI.createEvent.when.model.d_endVisible) {\n    event.endDate   = UI.createEvent.when.model.d_end.getDate();\n    event.endMonth  = UI.createEvent.when.model.monthNames[ UI.createEvent.when.model.d_end.getMonth() ];\n    event.endYear   = UI.createEvent.when.model.d_end.getFullYear();\n    event.endTime   = UI.createEvent.when.model.d_end.getHours()  + ':' + ('0' + UI.createEvent.when.model.d_end.getMinutes() ).slice(-2);\n  }\n  \n  event.host      = $('#createEvent-host').val();\n  event.location  = $('#createEvent-location').val();\n  event.guests    = getGuests();\n  event.message   = $('#createEvent-message').val();\n  \n  function getGuests() {\n    var arr = [];\n    \n    $('#createEvent .guestsList .guestsList-guest').each(function() {\n      var guest = $(this).find('input').val();\n      \n      if (guest) {\n        arr.push(guest);\n      }\n    });\n    \n    return arr;\n  }\n  \n  return event;\n};\n\nUI.createEvent.form.clean = function() {\n  $('#createEvent')[0].reset();\n  UI.createEvent.when.clean();\n  UI.createEvent.guests.clean();\n};\n\n/*\nUI.createEvent.form.manageFocus = function() {\n  var $startTrigger   = $('#createEvent-start-trigger');\n  var $endTrigger     = $('#createEvent-end-trigger');\n  var $endDateInput   = $('#createEvent-end-date');\n  var $host           = $('#createEvent-host')\n  \n  $startTrigger.on('click', function(e) {\n    $endDateInput[0].focus();\n  }\n}\n*/\n\n\n$(document).ready(function () {\n  UI.core.init();\n  UI.createEvent.init();\n  UI.registration();\n  UI.events.init();\n});","// DESCRIPTION\n// ============================================================\n// validator manages validation process on a field level.\n// it means, that you can init it on a specific field\n// pass options (messages), \n// set constraints using html attributes (see Constraint Validation API)\n// and enjoy the process\n//\n// important: validator supports slightly different logic for regular fields and password* fields\n// * password validation options are hardcoded\n\n// USAGE\n// ============================================================\n// $('#regPwd').validator(options);\n\n// OPTIONS\n// ============================================================\n// take a look at module's default options\n// it is allowed to redefine any predefined error messages\n// $('#regName').validator({\n//      messages: {\n//      valueMissing: 'We really need your name, mate',\n//      tooShort: 'The name is too short, bro (at least %N% characters)'\n//    }\n//  });\n\n// GENERATED MARKUP\n// ============================================================\n// in case of password field\n// module generates additional markup (to provide hints)\n// <ul class=\"list-unstyled\">\n//   <li><span class=\"glyphicon glyphicon-ban-circle\"></span> Hint text</li>\n//   ...\n//   <li><span class=\"glyphicon glyphicon-ban-circle\"></span> Hint text</li>\n// </ul>  \n\n// API\n// ============================================================\n// you can force validation on a field\n// $('#regName').validator('forceValidation');\n\n\n+function ($) {\n  'use strict';\n  \n  var moduleName = 'validator';\n\n  function Module (element, options) {\n    this.element        = element;\n    this._name          = moduleName;\n    this._defaults      = $.fn[moduleName].defaults;\n    this.options        = $.extend(true, {}, this._defaults, options );\n    this.elementType    = this.element.type;\n    this.$element       = null;\n    this.$parent        = null;\n    this.$helpBlock     = null;\n    this.$messagesList  = null; // used only for 'password' fields\n    this.everValue      = null;\n    \n    this.init();\n  }\n  \n  Module.prototype.init = function () {\n    this.buildDom();\n    this.buildCache();\n    this.bindEvents();\n  };\n  \n  Module.prototype.buildDom = function() {\n    if (this.elementType == 'password') {\n      var $ul = $('<ul class=\"list-unstyled\"></ul>');\n      \n      for (var key in this.options.messages.password) {\n        var element = '<li><span class=\"glyphicon glyphicon-ban-circle\"></span> ' \n                      + this.options.messages.password[key] \n                      + '</li>';\n        \n        $ul.append(element);\n      }\n      \n      $(this.element).closest('div').append($ul);\n    }\n  };\n  \n  Module.prototype.buildCache = function() {\n    this.$element   = $(this.element);\n    this.$parent    = this.$element.closest('.form-group');\n    this.$helpBlock = this.$element.siblings('.help-block');\n    this.$messagesList = this.$parent.find('ul.list-unstyled');\n  };\n  \n  Module.prototype.bindEvents = function() {\n    var module = this;\n    \n    module.$element.on('focus' + '.' + module._name, function() {\n      if ( !module.everValue ) {\n        module.everValue = module.$element.val();\n      }\n    });\n    \n    module.$element.on('input' + '.' + module._name, function() {\n      if ( module.isValid() ) {\n        module.cleanUp();\n      } else if ( module.everValue ) {\n        module.showError();\n      }\n    });\n    \n    module.$element.on('blur' + '.' +  module._name, function() {\n      if ( !module.$element.val() && !module.everValue ) {\n        return;\n      }\n      \n      if ( module.isValid() ) {\n        module.cleanUp();\n      } else {\n        module.showError();\n      }\n    });\n    \n    module.$element.on('input' + '.' + module._name + ', ' + 'blur' + '.' +  module._name , function() {\n      if ( module.elementType == 'password' ) {\n        module.processPasswordMessages();\n      }\n    });\n  };\n  \n  Module.prototype.isValid = function() {\n    if ( this.elementType != 'password' ) {\n      return this.element.checkValidity();\n    }\n    \n    return this.isValid_password().isValid;\n  };\n  \n  Module.prototype.isValid_password = function() {\n    var minLength = /^[\\s\\S]{8,}$/;\n    var upper = /[A-Z]/;\n    var lower = /[a-z]/;\n    var number = /[0-9]/;\n    var special = /[ !\"#$%&'()*+,\\-./:;<=>?@[\\\\\\]^_`{|}~]/;\n    var password = this.$element.val();\n    var result = {};\n    \n    result.conditions = {};\n    result.isValid = true;\n    \n    result.conditions.minLength = minLength.test(password) ? true : false;\n    result.conditions.upper = upper.test(password) ? true : false;\n    result.conditions.lower = lower.test(password) ? true : false;\n    result.conditions.number = number.test(password) ? true : false;\n    result.conditions.special = special.test(password) ? true : false;\n    \n    for (var key in result.conditions) {\n      if( result.conditions[key] === false ) result.isValid = false;\n    }\n    \n    if (result.isValid) {\n      this.element.setCustomValidity('');\n    } else {\n      this.element.setCustomValidity('invalid');\n    }\n    \n    return result;\n  };\n  \n  Module.prototype.showError = function() {\n    var message = this.getErrorMessage();\n    \n    this.$parent.addClass('has-error');\n    this.$helpBlock.removeClass('hidden').html(message);\n  };\n  \n  Module.prototype.cleanUp = function() {\n    this.$helpBlock.addClass('hidden').html();\n    this.$parent.removeClass('has-error');\n  };\n  \n  Module.prototype.getErrorMessage = function() {\n    var states = this.element.validity;\n    \n    for (var key in states) {\n      if ( states[key] ) {\n        return this.formatMessage(key);\n      }\n    }\n    \n    return false;\n  };\n  \n  Module.prototype.formatMessage = function(key) {\n    var message = this.options.messages[key];\n    \n    if (key == 'tooShort') {\n      message = message.replace('%N%', this.$element.attr('minlength'));\n    }\n    \n    return message;\n  };\n  \n  Module.prototype.processPasswordMessages = function() {\n    var result = this.isValid_password();\n    var counter = 0;\n    \n    for (var key in result.conditions) {\n      counter++;\n      \n      if (result.conditions[key]) {\n        this.$messagesList\n          .find('li:nth-child(' + counter + ')')\n          .addClass('text-success strong')\n          .find('.glyphicon')\n          .removeClass('glyphicon-ban-circle')\n          .addClass('glyphicon-ok-circle');\n      } else {\n        this.$messagesList\n          .find('li:nth-child(' + counter + ')')\n          .removeClass('text-success')\n          .find('.glyphicon')\n          .removeClass('glyphicon-ok-circle')\n          .addClass('glyphicon-ban-circle');\n      }\n    }\n  };\n  \n  // API methods\n  Module.prototype.forceValidation = function() {\n    if ( this.isValid() ) {\n      this.cleanUp();\n    } else {\n      this.showError();\n    }\n    \n    if ( this.elementType == 'password' ) {\n      this.processPasswordMessages();\n    }\n    \n    return false;\n  };\n  // end of API methods\n  \n  $.fn[moduleName] = function (option) {\n    return this.each(function () {\n      var $this   = $(this);\n      var data    = $this.data( 'module_' + moduleName );\n      var options = $.extend({}, $.fn[moduleName].defaults, $this.data(), typeof option == 'object' && option);\n      \n      if (!data) $this.data( 'module_' + moduleName, ( data = new Module(this, options) ) );\n      if (typeof option == 'string') data[option]();\n    });\n  };\n\n  $.fn[moduleName].defaults = {\n    messages: {\n      valueMissing: 'The field is required',\n      tooShort: 'At least %N% characters',\n      password: { \n        minlength: 'At least 8 characters long', // todo: get rid of hardcoded parameters\n        upper: 'Contains uppercase letters',\n        lower: 'Contains lowercase letters',\n        number: 'Contains numbers',\n        special: 'Contains punctuation'\n      }\n    }\n  };\n\n}(jQuery);","UI.core = {};\n\nUI.core.model = {\n  applicationState: 'registration'\n};\n\nUI.core.init = function() {\n  UI.core.viewBuilder();\n};\n\nUI.core.viewBuilder = function() {\n  var $registration = $('.registration');\n  var $createEvent  = $('.createEvent');\n  var $list         = $('.eventsList');\n  var $dim          = $('.dim');\n  var $spinner      = $('.spinner_global');\n  var $body         = $('body');\n  \n  UI.events.process();\n  \n  // login state\n  if (UI.core.model.applicationState == 'registration') {\n    hideAll();\n    showSpinner();\n    \n    setTimeout(function(){\n      hideSpinner();\n      $registration.removeClass('hidden');\n    }, 1000);\n  }\n  \n  // events list state\n  if (UI.core.model.applicationState == 'createEvent') {\n    hideAll();\n    showSpinner();\n    \n    setTimeout(function(){\n      hideSpinner();\n      $createEvent.removeClass('hidden');\n    }, 1000);\n  }\n  \n  // events list state\n  if (UI.core.model.applicationState == 'list') {\n    hideAll();\n    showSpinner();\n    \n    setTimeout(function(){\n      hideSpinner();\n      $list.removeClass('hidden');\n    }, 1000);\n  }\n  \n  function showSpinner() {\n    $body.addClass('modal-open');\n    $dim.removeClass('hidden');\n    $spinner.removeClass('hidden');\n  }\n  \n  function hideSpinner() {\n    $body.removeClass('modal-open');\n    $dim.addClass('hidden');\n    $spinner.addClass('hidden');\n  }\n  \n  function hideAll() {\n    $registration .addClass('hidden');\n    $createEvent  .addClass('hidden');\n    $list         .addClass('hidden');\n  }\n};","UI.events = {};\n\nUI.events.model = {\n  events: []\n};\n\nUI.events.init = function() {\n  var $btns = $('.eventsList .btn-success');\n  $btns.each(function() {\n    $(this).on('click', function() {\n      UI.core.model.applicationState = 'createEvent';\n      UI.core.viewBuilder();\n    });\n  });\n};\n\nUI.events.process = function() {\n  var $header   = $('.eventsList > .page-header');\n  var $events   = $('.eventsList > .events');\n  var $empty    = $('.eventsList > .emptyState');\n  \n  $events.html('');\n  \n  if (UI.events.model.events.length) {\n    UI.events.model.events.forEach(function(event) {\n      // event title\n      var name = event.name ? '<span class=\"event-name\">' + event.name + '</span>' : '';\n      var type = event.type ? '<span class=\"label label-primary event-type\">' + event.type + '</span>' : '';\n      var title = '<h2 class=\"event-title\">' + name + type + '</h2>';\n      \n      // event when\n      var sameDate = '';\n      var noEndDate = '';\n      \n      if (event.startYear == new Date().getFullYear()) {event.startYear = '';}\n      if (event.endYear   == new Date().getFullYear()) {event.endYear = '';}\n      if (event.startDate == event.endDate) {sameDate = 'event-when_sameDate';}\n      if (!event.endDate) {noEndDate = 'event-when_onlyStart';}\n      \n      var startDate = '<div class=\"event-fieldset-field event-when-startDate\">' +\n                        '<span class=\"event-fieldset-label\">Date:</span>' +\n                        '<span class=\"event-fieldset-value\"><span class=\"glyphicon glyphicon-calendar\"></span>' + \n                          event.startDate + ' ' + \n                          event.startMonth + ' ' + \n                          event.startYear +\n                        '</span>' +\n                      '</div>';\n      \n      var startTime = '<div class=\"event-fieldset-field event-when-startTime\">' +\n                        '<span class=\"event-fieldset-label\">Time:</span>' +\n                        '<span class=\"event-fieldset-value\"><span class=\"glyphicon glyphicon-time\"></span>' + \n                          event.startTime + \n                        '</span>' +\n                      '</div>';\n      \n      var endDate   = event.endDate ? \n                      '<div class=\"event-fieldset-field event-when-endDate\">' +\n                        '<span class=\"event-fieldset-label\">Date:</span>' +\n                        '<span class=\"event-fieldset-value\"><span class=\"glyphicon glyphicon-calendar\"></span>' + \n                          event.endDate + ' ' + \n                          event.endMonth + ' ' + \n                          event.endYear +\n                        '</span>' +\n                      '</div>' : '';\n\n      var endTime   = event.endTime ? \n                      '<div class=\"event-fieldset-field event-when-endTime\">' +\n                        '<span class=\"event-fieldset-label\">Time:</span>' +\n                        '<span class=\"event-fieldset-value\"><span class=\"glyphicon glyphicon-time\"></span>' + \n                          event.endTime + \n                        '</span>' +\n                      '</div>' : '';\n      \n      var when      = '<div class=\"event-fieldset event-when ' + sameDate + ' ' + noEndDate + '\">' +\n                        startDate +\n                        startTime +\n                        endDate + \n                        endTime +\n                      '</div>';\n      \n      // event where\n      var host      = event.host ? \n                      '<div class=\"event-fieldset-field event-where-host\">' +\n                        '<span class=\"event-fieldset-label\">Host:</span>' +\n                        '<span class=\"event-fieldset-value\">' + event.host + '</span>' +\n                      '</div>' : '';\n      \n      var location  = event.location ? \n                      '<div class=\"event-fieldset-field event-where-location\">' +\n                        '<span class=\"event-fieldset-label\">Location:</span>' +\n                        '<span class=\"event-fieldset-value\">' + event.location + '</span>' +\n                      '</div>' : '';\n      \n      var where     = host || location ? '<div class=\"event-fieldset event-where\">' + host + location + '</div>' : '';\n      \n      // event guests\n      var guests = '';\n      \n      if (event.guests.length) {\n        event.guests.forEach(function(guest) {\n          guests += '<div class=\"event-fieldset-field event-guests-guest\">' +\n                      '<span class=\"event-fieldset-label\">Guests:</span>' +\n                      '<span class=\"event-fieldset-value\"><span class=\"glyphicon glyphicon-user\"></span>' + guest + '</span>' +\n                    '</div>';\n        });\n        \n        guests = '<div class=\"event-fieldset event-guests\">' + guests + '</div>';\n      }\n      \n      $events.append( '<div class=\"event\">' + title + when + where + guests + '</div>');\n    });\n    \n    $header.removeClass('hidden');\n    $events.removeClass('hidden');\n    $empty.addClass('hidden');\n  } else {\n    $header.addClass('hidden');\n    $events.addClass('hidden');\n    $empty.removeClass('hidden');\n  }\n};","UI.registration = function() {\n  var $form = $('#registration');\n  var $name = $('#registration-name');\n  var $email = $('#registration-email');\n  var $pwd = $('#registration-pwd');\n  \n  $name.validator({\n    messages: {\n      valueMissing: 'We really need your name, mate',\n      tooShort: 'The name is too short, bro (at least %N% characters)'\n    }\n  });\n  \n  $email.validator({\n    messages: {\n      valueMissing: 'What if it is an emergency?',\n      typeMismatch: 'It doesn\\'t look like a valid email'\n    }\n  });\n  \n  $pwd.validator();\n  \n  $form.on('submit', function(e) {\n    // call force validation\n    $name.validator('forceValidation');\n    $email.validator('forceValidation');\n    $pwd.validator('forceValidation');\n    \n    e.preventDefault();\n    \n    if ($form[0].checkValidity() === false) {\n      return false;\n    } else {\n      UI.core.model.applicationState = 'list';\n      UI.core.viewBuilder();\n    }\n  });\n};","UI.createEvent = {};\n\nUI.createEvent.init = function() {\n  UI.createEvent.when.init();\n  UI.createEvent.guests.init();\n  UI.createEvent.where();\n  UI.createEvent.form.init();\n};\n\nUI.createEvent.when = {};\n\nUI.createEvent.when.model = {\n  d_start       : true,\n  d_end         : true,\n  d_endVisible  : false,\n  monthNames    : [\n                  'January', 'February', 'March', 'April', 'May', 'June',\n                  'July', 'August', 'September', 'October', 'November', 'December'\n                  ],\n  isUpdating    : false\n};\n\nUI.createEvent.when.init = function() {\n  var $startTrigger   = $('#createEvent-start-trigger');\n  var $startDate      = $('#createEvent-start-date-group');\n  var $startTime      = $('#createEvent-start-time');\n  \n  var $endRow         = $('#createEvent-end');\n  var $endTrigger     = $('#createEvent-end-trigger');\n  var $endDate        = $('#createEvent-end-date-group');\n  var $endTime        = $('#createEvent-end-time');\n  \n  UI.createEvent.when.setDates();\n  \n  init();\n  \n  UI.createEvent.when.updateDates('start', UI.createEvent.when.model.d_start);\n  UI.createEvent.when.updateDates('end', UI.createEvent.when.model.d_end);\n  \n  subscribe();\n  \n  function init() {\n    $startDate.datepicker({\n      autoclose: true,\n      startDate: UI.createEvent.when.model.d_start\n    });\n    \n    $startTime.timepicker({\n      template: false,\n      showInputs: false,\n      minuteStep: 5,\n      showMeridian: false\n    });\n    \n    $endDate.datepicker({\n      autoclose: true,\n      startDate: UI.createEvent.when.model.d_end\n    });\n    \n    $endTime.timepicker({\n      template: false,\n      showInputs: false,\n      minuteStep: 5,\n      showMeridian: false\n    });\n    \n    // fixing weird issue with timepicker's input-group-addon\n    $startTime.siblings('.input-group-addon').off('click');\n    $endTime  .siblings('.input-group-addon').off('click');\n  }\n  \n  function subscribe() {\n    $startTrigger.on('click', function(e) {\n      e.preventDefault();\n      $endRow.removeClass('hidden');\n      $startTrigger.addClass('hidden');\n      UI.createEvent.when.model.d_endVisible = true;\n    });\n    \n    $endTrigger.on('click', function(e) {\n      e.preventDefault();\n      $endRow.addClass('hidden');\n      $startTrigger.removeClass('hidden');\n      UI.createEvent.when.model.d_endVisible = false;\n    });\n\n    $startDate.on('changeDate', function() {\n      if (UI.createEvent.when.model.isUpdating) return;\n      \n      UI.createEvent.when.model.isUpdating = true;\n      \n      onStartChange();\n      \n      UI.createEvent.when.model.isUpdating = false;\n    });\n    \n    $startTime.timepicker().on('changeTime.timepicker blur', function() {\n      if (UI.createEvent.when.model.isUpdating) return;\n      \n      UI.createEvent.when.model.isUpdating = true;\n      \n      onStartChange();\n      \n      UI.createEvent.when.model.isUpdating = false;\n    });\n    \n    $endDate.on('changeDate', function() {\n      if (UI.createEvent.when.model.isUpdating) return;\n      \n      UI.createEvent.when.model.isUpdating = true;\n      \n      onEndChange();\n      \n      UI.createEvent.when.model.isUpdating = false;\n    });\n    \n    $endTime.timepicker().on('changeTime.timepicker blur', function() {\n      if (UI.createEvent.when.model.isUpdating) return;\n      \n      UI.createEvent.when.model.isUpdating = true;\n      \n      onEndChange();\n      \n      UI.createEvent.when.model.isUpdating = false;\n    });\n  }\n  \n  // start\n  // end\n  // returns d;\n  function getDateTime(type) {\n    var d;\n    var t;\n    \n    if (type == 'start') {\n      d = $startDate.datepicker('getDate');\n      t = parseTime( $startTime.val() );\n      \n      d.setHours( t.hours );\n      d.setMinutes( t.minutes );\n    }\n    \n    if (type == 'end') {\n      d = $endDate.datepicker('getDate');\n      t = parseTime( $endTime.val() );\n      \n      d.setHours( t.hours );\n      d.setMinutes( t.minutes );\n    }\n    \n    return d;\n  }\n  \n  // time\n  // returns {hours: 'HH', minutes: 'MM'}\n  function parseTime(time) {\n    var arr = time.split(':');\n    \n    return {\n      hours: arr[0] || 0,\n      minutes: arr[1]  || 0\n    }\n  }\n  \n  // returns true if (UI.createEvent.when.model.d_end < UI.createEvent.when.model.d_start + 1 hour)\n  function compareDates() {\n    if ( UI.createEvent.when.model.d_end - UI.createEvent.when.model.d_start < 3600000 ) {\n      return true;\n    }\n    \n    return false;\n  }\n  \n  function onStartChange() {\n    UI.createEvent.when.updateDates('start', getDateTime('start'));\n    \n    if ( compareDates() ) {\n      var d = UI.createEvent.when.model.d_start;\n      \n      d.setHours( d.getHours() + 1 );\n      UI.createEvent.when.updateDates( 'end', d );\n    }\n  }\n  \n  function onEndChange() {\n    UI.createEvent.when.updateDates('end', getDateTime('end'));\n  }\n};\n\nUI.createEvent.when.setDates = function() {\n  var now                       = new Date();\n  \n  UI.createEvent.when.model.d_start  = new Date( now.getFullYear(), now.getMonth(), now.getDate(), now.getHours() + 1 );\n  UI.createEvent.when.model.d_end    = new Date( now.getFullYear(), now.getMonth(), now.getDate(), now.getHours() + 2 );\n};\n\nUI.createEvent.when.updateDates = function(type, d) {\n  var $startDate      = $('#createEvent-start-date-group');\n  var $startTime      = $('#createEvent-start-time');\n  var $endDate        = $('#createEvent-end-date-group');\n  var $endTime        = $('#createEvent-end-time');\n  \n  if (type == 'start') {\n    UI.createEvent.when.model.d_start = new Date( d );\n    \n    UI.createEvent.when.model.isUpdating = true;\n    $startDate.datepicker( 'setDate', (UI.createEvent.when.model.d_start.getMonth() + 1) + '-' + UI.createEvent.when.model.d_start.getDate() + '-' + UI.createEvent.when.model.d_start.getFullYear() );\n    $startTime.timepicker( 'setTime', UI.createEvent.when.model.d_start.getHours() + ':' + UI.createEvent.when.model.d_start.getMinutes() );\n    UI.createEvent.when.model.isUpdating = false;\n  }\n  \n  if (type == 'end') {\n    UI.createEvent.when.model.d_end = new Date( d );\n    \n    UI.createEvent.when.model.isUpdating = true;\n    $endDate.datepicker( 'setDate', (UI.createEvent.when.model.d_end.getMonth() + 1) + '-' + UI.createEvent.when.model.d_end.getDate() + '-' + UI.createEvent.when.model.d_end.getFullYear() );\n    $endTime.timepicker( 'setTime', UI.createEvent.when.model.d_end.getHours() + ':' + UI.createEvent.when.model.d_end.getMinutes() );\n    UI.createEvent.when.model.isUpdating = false;\n  }\n  \n  $endDate.datepicker( 'setStartDate', UI.createEvent.when.model.d_start );\n};\n\nUI.createEvent.when.clean = function() {\n  UI.createEvent.when.setDates();\n  UI.createEvent.when.updateDates('start', UI.createEvent.when.model.d_start);\n  UI.createEvent.when.updateDates('end', UI.createEvent.when.model.d_end);\n  $('#createEvent-end').addClass('hidden');\n  $('#createEvent-start-trigger').removeClass('hidden');\n};\n\nUI.createEvent.guests = {};\n\nUI.createEvent.guests.dom = {\n  $list: $('.guestsList'),\n  $first: $('.guestsList .guestsList-guest:first-child')\n};\n\nUI.createEvent.guests.init = function() {\n  var $list  = UI.createEvent.guests.dom.$list;\n  var $first = UI.createEvent.guests.dom.$first;\n  \n  addListeners( $first );\n  UI.createEvent.guests.manageLinksVisibility();\n  \n  function addListeners( $el ) {\n    var $remove = $el.find('.guestsList-trigger_remove');\n    var $add    = $el.find('.guestsList-trigger_add');\n    \n    $remove.on('click', function(e) {\n      e.preventDefault();\n      $el.remove();\n      UI.createEvent.guests.manageLinksVisibility();\n    });\n    \n    $add.on('click', function(e) {\n      e.preventDefault();\n      addListeners( addElement() );\n      UI.createEvent.guests.manageLinksVisibility();\n    });\n  }\n  \n  function addElement() {\n    var $el       = $('<li class=\"guestsList-guest clearfix\"></li>');\n    var template  = '<div class=\"form-group guestsList-guest-name\">' +\n                      '<input type=\"text\" class=\"form-control\" placeholder=\"guest\\'s name\">' +\n                    '</div>' +\n                    '<a href=\"#\" class=\"guestsList-trigger guestsList-trigger_remove hidden\">Remove</a>' +\n                    '<a href=\"#\" class=\"guestsList-trigger guestsList-trigger_add hidden\">+ Guest</a>';\n    \n    $list.append( $el.append(template) );\n    \n    return $el;\n  }\n};\n\nUI.createEvent.guests.manageLinksVisibility = function() {\n  var $list  = UI.createEvent.guests.dom.$list;\n  var q      = $list.children('li').length;\n  \n  $list.children('li').each(function(n, el) {\n    var $remove = $(el).find('.guestsList-trigger_remove');\n    var $add    = $(el).find('.guestsList-trigger_add');\n    \n    if (n < q - 1) {\n      $add.addClass('hidden');\n      $remove.removeClass('hidden');\n    } else if (q > 1) {\n      $add.removeClass('hidden');\n      $remove.removeClass('hidden');\n    } else {\n      $add.removeClass('hidden');\n      $remove.addClass('hidden');\n    }\n  });\n};\n\nUI.createEvent.guests.clean = function() {\n  var $list  = UI.createEvent.guests.dom.$list;\n  \n  $list.find('li').not(':first-child').remove();\n  UI.createEvent.guests.manageLinksVisibility();\n};\n\nUI.createEvent.where = function() {\n  var autocomplete  = new google.maps.places.Autocomplete( document.getElementById('createEvent-location'), {types: ['geocode']});\n  //var geocoder      = new google.maps.Geocoder();\n  var $geoTrigger   = $('.geoLocation-icon');\n  var $geoInput     = $('#createEvent-location');\n  var $spinner      = $geoTrigger.siblings('.spinner');\n  \n  if (navigator.geolocation) {\n    $geoTrigger.removeClass('hidden');\n    $geoTrigger.on('click', function() {\n      showSpinner();\n      navigator.geolocation.getCurrentPosition(onGetPositionSuccess, onGetPositionError);\n    });\n  }\n  \n  function onGetPositionSuccess(position) {\n    $.ajax({\n      url: 'https://maps.googleapis.com/maps/api/geocode/json?latlng=' \n            + position.coords.latitude + ',' + position.coords.longitude \n            + '&key=AIzaSyDjdMGfSpv44b2bVuKVW8AxBGmXTVHTRzA'\n    }).done(function(data) {\n      $geoInput.val( data.results[0].formatted_address || '' );\n    }).always(function() {\n      hideSpinner();\n    });\n  }\n  \n  function onGetPositionError(error) {\n    hideSpinner();\n    console.log(error);\n  }\n  \n  function showSpinner() {\n    $spinner.removeClass('hidden');\n    $geoTrigger.addClass('hidden');\n  }\n  \n  function hideSpinner() {\n    $spinner.addClass('hidden');\n    $geoTrigger.removeClass('hidden');\n  }\n};\n\nUI.createEvent.form = {};\n\nUI.createEvent.form.init = function() {\n  var $form     = $('#createEvent');\n  var $name     = $('#createEvent-name');\n  var $end      = $('#createEvent-end');\n  var $endDate  = $('#createEvent-end-date');\n  var $endTime  = $('#createEvent-end-time');\n  var $help     = $end.find('.help-block');\n  var $cancel   = $('#createEvent-cancel');\n  \n  $name.validator();\n  \n  $form.on('keyup keypress', ':input:not(textarea):not([type=submit]):not([type=button])', function(e) {\n    var keyCode = e.keyCode;\n    if (keyCode === 13) { \n      e.preventDefault();\n      return false;\n    }\n  });\n  \n  $form.on('submit', function(e) {\n    e.preventDefault();\n    \n    // call force validation\n    $name.validator('forceValidation');\n    \n    // validate end time\n    if (UI.createEvent.when.model.d_end - UI.createEvent.when.model.d_start <= 0) {\n      makeEndInvalid();\n      \n      $endTime.timepicker().on('changeTime.timepicker', function() {\n        if (UI.createEvent.when.model.d_end - UI.createEvent.when.model.d_start > 0) {\n          makeEndValid()\n        }\n      });\n      \n      $endTime.timepicker().on('changeTime.timepicker', function() {\n        if (UI.createEvent.when.model.d_end - UI.createEvent.when.model.d_start > 0) {\n          makeEndValid()\n        }\n      });\n    } else {\n      makeEndValid()\n    }\n\n    if ($form[0].checkValidity() === false) {\n      return false;\n    } else {\n      UI.events.model.events.push( UI.createEvent.form.collectEvent() );\n      UI.createEvent.form.clean();\n      UI.core.model.applicationState = 'list';\n      UI.core.viewBuilder();\n    }\n  });\n  \n  $cancel.on('click', function(e) {\n    e.preventDefault();\n    UI.createEvent.form.clean();\n    UI.core.model.applicationState = 'list';\n    UI.core.viewBuilder();\n  })\n  \n  function makeEndValid() {\n    $end.removeClass('has-error');\n    $help.addClass('hidden');\n    $endDate[0].setCustomValidity('');\n    $endTime[0].setCustomValidity('');\n  }\n  \n  function makeEndInvalid() {\n    $end.addClass('has-error');\n      $help.removeClass('hidden');\n      $endDate[0].setCustomValidity('invalid');\n      $endTime[0].setCustomValidity('invalid');\n  }\n};\n\nUI.createEvent.form.collectEvent = function() {\n  var event = {};\n  event.guests = [];\n  \n  event.name        = $('#createEvent-name').val();\n  event.type        = $('#createEvent-type').val();\n  event.startDate   = UI.createEvent.when.model.d_start.getDate();\n  event.startMonth  = UI.createEvent.when.model.monthNames[ UI.createEvent.when.model.d_start.getMonth() ];\n  event.startYear   = UI.createEvent.when.model.d_start.getFullYear();\n  event.startTime   = UI.createEvent.when.model.d_start.getHours()  + ':' + ('0' + UI.createEvent.when.model.d_start.getMinutes() ).slice(-2);\n  \n  if (UI.createEvent.when.model.d_endVisible) {\n    event.endDate   = UI.createEvent.when.model.d_end.getDate();\n    event.endMonth  = UI.createEvent.when.model.monthNames[ UI.createEvent.when.model.d_end.getMonth() ];\n    event.endYear   = UI.createEvent.when.model.d_end.getFullYear();\n    event.endTime   = UI.createEvent.when.model.d_end.getHours()  + ':' + ('0' + UI.createEvent.when.model.d_end.getMinutes() ).slice(-2);\n  }\n  \n  event.host      = $('#createEvent-host').val();\n  event.location  = $('#createEvent-location').val();\n  event.guests    = getGuests();\n  event.message   = $('#createEvent-message').val();\n  \n  function getGuests() {\n    var arr = [];\n    \n    $('#createEvent .guestsList .guestsList-guest').each(function() {\n      var guest = $(this).find('input').val();\n      \n      if (guest) {\n        arr.push(guest);\n      }\n    });\n    \n    return arr;\n  }\n  \n  return event;\n};\n\nUI.createEvent.form.clean = function() {\n  $('#createEvent')[0].reset();\n  UI.createEvent.when.clean();\n  UI.createEvent.guests.clean();\n};\n\n/*\nUI.createEvent.form.manageFocus = function() {\n  var $startTrigger   = $('#createEvent-start-trigger');\n  var $endTrigger     = $('#createEvent-end-trigger');\n  var $endDateInput   = $('#createEvent-end-date');\n  var $host           = $('#createEvent-host')\n  \n  $startTrigger.on('click', function(e) {\n    $endDateInput[0].focus();\n  }\n}\n*/"],"sourceRoot":"/source/"}